import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
var _templateObject;
import gql from 'graphql-tag';
import { mimeTypes, nodeCacheRequiredFields } from "../../fragments";
export var CONTENT_PREVIEW_QUERY = gql(_templateObject || (_templateObject = _taggedTemplateLiteral(["query previewQueryByWorkspace($path: String!, $templateType: String!, $view: String!, $contextConfiguration: String!, $language: String!, $workspace: Workspace!, $requestAttributes: [InputRenderRequestAttributeInput]) {\n    jcr(workspace: $workspace) {\n        nodeByPath(path: $path) {\n            id: uuid\n            isFile: isNodeType(type: {types: [\"jnt:file\"]})\n            path\n            lastModified: property(name: \"jcr:lastModified\", language: $language) {\n                value\n            }\n            renderedContent(templateType: $templateType, view: $view, contextConfiguration: $contextConfiguration, language: $language, requestAttributes: $requestAttributes) {\n                output\n                staticAssets(type: \"css\") {\n                    key\n                }\n            }\n            ...NodeInfoResourceNode\n            ...NodeCacheRequiredFields\n        }\n    }\n}", "", ""])), nodeCacheRequiredFields.gql, mimeTypes.gql);
//# sourceMappingURL=useContentPreview.gql-queries.js.map
