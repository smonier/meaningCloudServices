{"version":3,"names":["useNodeInfo","evaluateVisibilityPaths","visible","visibilityPaths","nodePath","i","length","RegExp","test","addArrayOptionValues","newValue","useNodeInfoOptions","useNodeInfoKey","concat","filter","item","indexOf","useNodeChecks","variables","options","queryOptions","requiredPermission","requiredSitePermission","showOnNodeTypes","hideOnNodeTypes","requireModuleInstalledOnSite","showForPaths","hideForPaths","othersOptions","_objectWithoutProperties","_excluded","_objectSpread","requiredPermissions","requiredSitePermissions","getSiteInstalledModules","_useNodeInfo","node","nodes","loading","othersResults","_excluded2","checksResult","doNodeCheck","currentNode","reduce","acc","val","site","installedModulesWithAllDependencies","includes","path","result"],"sources":["useNodeChecks.ts"],"sourcesContent":["import {NodeInfoResult, useNodeInfo} from '../useNodeInfo';\nimport {NodeInfoOptions} from '~/hooks/useNodeInfo/useNodeInfo.gql-queries';\nimport {WatchQueryOptions} from '@apollo/client';\n\nexport type NodeCheckOptions = NodeInfoOptions & Partial<{\n    requiredPermission: string | string[],\n    requiredSitePermission: string | string[],\n    showOnNodeTypes: string[],\n    hideOnNodeTypes: string[],\n    requireModuleInstalledOnSite: string[],\n    showForPaths: string[],\n    hideForPaths: string[],\n}>\n\nexport type NodeCheckResult = NodeInfoResult & Partial<{\n    checksResult: boolean,\n}>\n\nconst evaluateVisibilityPaths = (visible: boolean, visibilityPaths: string[], nodePath: string) => {\n    for (let i = 0; i < visibilityPaths.length; i++) {\n        if (new RegExp(visibilityPaths[i]).test(nodePath)) {\n            return visible;\n        }\n    }\n\n    return !visible;\n};\n\nfunction addArrayOptionValues(newValue: string[], useNodeInfoOptions: NodeInfoOptions, useNodeInfoKey: 'getPermissions' | 'getSitePermissions' |'getIsNodeTypes'| 'getProperties') {\n    if (newValue) {\n        useNodeInfoOptions[useNodeInfoKey] = useNodeInfoOptions[useNodeInfoKey] || [];\n        useNodeInfoOptions[useNodeInfoKey] = useNodeInfoOptions[useNodeInfoKey].concat(newValue.filter(item => useNodeInfoOptions[useNodeInfoKey].indexOf(item) < 0));\n    }\n}\n\nexport const useNodeChecks = (variables: {[key:string]: any}, options: NodeCheckOptions, queryOptions: WatchQueryOptions): NodeCheckResult => {\n    const {requiredPermission, requiredSitePermission, showOnNodeTypes, hideOnNodeTypes, requireModuleInstalledOnSite, showForPaths, hideForPaths, ...othersOptions} = options;\n    const useNodeInfoOptions = {...othersOptions};\n\n    const requiredPermissions = (typeof requiredPermission === 'string') ? [requiredPermission] : requiredPermission;\n    const requiredSitePermissions = (typeof requiredSitePermission === 'string') ? [requiredSitePermission] : requiredSitePermission;\n\n    addArrayOptionValues(requiredPermissions, useNodeInfoOptions, 'getPermissions');\n    addArrayOptionValues(requiredSitePermissions, useNodeInfoOptions, 'getSitePermissions');\n    addArrayOptionValues(showOnNodeTypes, useNodeInfoOptions, 'getIsNodeTypes');\n    addArrayOptionValues(hideOnNodeTypes, useNodeInfoOptions, 'getIsNodeTypes');\n\n    if (requireModuleInstalledOnSite) {\n        useNodeInfoOptions.getSiteInstalledModules = true;\n    }\n\n    const {node, nodes, loading, ...othersResults} = useNodeInfo(variables, useNodeInfoOptions, queryOptions);\n\n    if (loading) {\n        return {loading, ...othersResults};\n    }\n\n    if (!node && !nodes) {\n        return {checksResult: false, loading, ...othersResults};\n    }\n\n    const doNodeCheck = (currentNode: any) =>\n        (!requiredPermissions || requiredPermissions.reduce((acc, val) => acc || currentNode[val], false)) &&\n        (!requiredSitePermissions || requiredSitePermissions.reduce((acc, val) => acc || currentNode.site[val], false)) &&\n        (!showOnNodeTypes || showOnNodeTypes.reduce((acc, val) => acc || currentNode[val], false)) &&\n        (!hideOnNodeTypes || !hideOnNodeTypes.reduce((acc, val) => acc || currentNode[val], false)) &&\n        (!requireModuleInstalledOnSite || requireModuleInstalledOnSite.reduce((acc, val) => acc && currentNode.site.installedModulesWithAllDependencies.includes(val), true)) &&\n        (!hideForPaths || evaluateVisibilityPaths(false, hideForPaths, currentNode.path || variables.path)) &&\n        (!showForPaths || evaluateVisibilityPaths(true, showForPaths, currentNode.path || variables.path));\n\n    const result = node ? doNodeCheck(node) : nodes.reduce((acc, val) => acc && doNodeCheck(val), true);\n\n    return {node, nodes, checksResult: result, loading, ...othersResults};\n};\n"],"mappings":"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"}