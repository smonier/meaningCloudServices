import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
var _templateObject, _templateObject2, _templateObject3;
import gql from 'graphql-tag';
export var PickerItemsFragment = {
  mixinTypes: {
    applyFor: 'node',
    gql: gql(_templateObject || (_templateObject = _taggedTemplateLiteral(["fragment MixinTypes on JCRNode {\n            mixinTypes {\n                name\n            }\n        }"])))
  },
  isPublished: {
    applyFor: 'node',
    variables: {
      language: 'String!'
    },
    gql: gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["fragment PublicationStatus on JCRNode {\n            publicationStatus: aggregatedPublicationInfo(language: $language) {\n                publicationStatus\n            }\n        }"])))
  },
  primaryNodeType: {
    applyFor: 'node',
    gql: gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["fragment PrimaryNodeTypeName on JCRNode {\n            primaryNodeType {\n                name\n            }\n        }"])))
  }
};
//# sourceMappingURL=Picker.gql-fragments.js.map
