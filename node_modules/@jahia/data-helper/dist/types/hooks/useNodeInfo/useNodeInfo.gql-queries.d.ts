import { DocumentNode } from 'graphql';
export type NodeInfoOptions = Partial<{
    getDisplayName: boolean;
    getPrimaryNodeType: boolean;
    getParent: boolean;
    getAggregatedPublicationInfo: {
        subNodes: boolean;
        reference: boolean;
    };
    getOperationSupport: boolean;
    getPermissions: string[];
    getSitePermissions: string[];
    getIsNodeTypes: string[];
    getProperties: string[];
    getSiteInstalledModules: boolean;
    getSiteLanguages: boolean;
    getDisplayableNodePath: boolean;
    getLockInfo: boolean;
    getChildNodeTypes: boolean;
    getContributeTypesRestrictions: boolean;
    getSubNodesCount: {
        types?: string[];
    };
    getMimeType: boolean;
}>;
export declare const validOptions: string[];
export declare const getQuery: (variables: {
    [key: string]: any;
}, schemaResult: any, options?: NodeInfoOptions) => {
    query: DocumentNode;
    generatedVariables: {
        [key: string]: unknown;
    };
    skip: boolean;
};
