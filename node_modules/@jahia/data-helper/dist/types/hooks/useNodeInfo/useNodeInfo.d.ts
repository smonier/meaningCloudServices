import { ApolloError, NetworkStatus, WatchQueryOptions } from '@apollo/client';
import { NodeInfoOptions } from './useNodeInfo.gql-queries';
import { DocumentNode, GraphQLError } from 'graphql';
export type Request = {
    variables: {
        [key: string]: any;
    };
    options: NodeInfoOptions;
    queryOptions: Partial<WatchQueryOptions>;
};
export type QueuedRequest = Request & {
    result?: any;
    setResult: (data: any) => void;
};
export type MergedRequest = Request & {
    originals: QueuedRequest[];
};
export type NodeInfoResult = {
    node?: any;
    nodes?: any[];
    errors?: readonly GraphQLError[];
    error?: ApolloError;
    loading?: boolean;
    networkStatus?: NetworkStatus;
    partial?: boolean;
    query?: DocumentNode;
    variables?: {
        [key: string]: any;
    };
};
export declare const useNodeInfo: (variables: {
    [key: string]: unknown;
}, options?: NodeInfoOptions, queryOptions?: Partial<WatchQueryOptions>) => NodeInfoResult;
