{"version":3,"names":["_graphqlTag","_interopRequireDefault","require","_encodeName","_templateObject","fragments","getNodeTypeFragment","name","encodedName","getEncodedNodeTypeName","applyFor","variables","_defineProperty2","gql","_taggedTemplateLiteral2","fragment","types","exports","encodeName"],"sources":["getIsNodeTypeFragment.ts"],"sourcesContent":["import gql from 'graphql-tag';\nimport {encodeName} from './encodeName';\nimport {Fragment} from '~/fragments/PredefinedFragments';\n\nconst fragments:{[key:string]: Fragment} = {};\n\nexport const getNodeTypeFragment = (name: string) => {\n    const encodedName = getEncodedNodeTypeName(name);\n    if (!fragments[encodedName]) {\n        fragments[encodedName] = {\n            applyFor: 'node',\n            variables: {\n                [encodedName]: 'InputNodeTypesInput!'\n            },\n            gql: gql`fragment NodeType_${encodedName} on JCRNode {\n                ${encodedName}:isNodeType(type: $${encodedName})\n            }`\n        };\n    }\n\n    return {\n        fragment: fragments[encodedName],\n        variables: {\n            [encodedName]: {\n                types: name\n            }\n        }\n    };\n};\n\nexport const getEncodedNodeTypeName = (name:string) => 'nodeType_' + encodeName(name);\n"],"mappings":";;;;;;;;;AAAA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AAAwC,IAAAE,eAAA;AAGxC,IAAMC,SAAkC,GAAG,CAAC,CAAC;AAEtC,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,IAAY,EAAK;EACjD,IAAMC,WAAW,GAAGC,sBAAsB,CAACF,IAAI,CAAC;EAChD,IAAI,CAACF,SAAS,CAACG,WAAW,CAAC,EAAE;IACzBH,SAAS,CAACG,WAAW,CAAC,GAAG;MACrBE,QAAQ,EAAE,MAAM;MAChBC,SAAS,MAAAC,gBAAA,iBACJJ,WAAW,EAAG,sBAAsB,CACxC;MACDK,GAAG,MAAEA,sBAAG,EAAAT,eAAA,KAAAA,eAAA,OAAAU,uBAAA,qHAAqBN,WAAW,EAClCA,WAAW,EAAsBA,WAAW;IAEtD,CAAC;EACL;EAEA,OAAO;IACHO,QAAQ,EAAEV,SAAS,CAACG,WAAW,CAAC;IAChCG,SAAS,MAAAC,gBAAA,iBACJJ,WAAW,EAAG;MACXQ,KAAK,EAAET;IACX,CAAC;EAET,CAAC;AACL,CAAC;AAACU,OAAA,CAAAX,mBAAA,GAAAA,mBAAA;AAEK,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIF,IAAW;EAAA,OAAK,WAAW,GAAG,IAAAW,sBAAU,EAACX,IAAI,CAAC;AAAA;AAACU,OAAA,CAAAR,sBAAA,GAAAA,sBAAA"}