"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSitePermissionFragment = exports.getPermissionFragment = exports.getEncodedPermissionName = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _graphqlTag = _interopRequireDefault(require("graphql-tag"));
var _encodeName = require("./encodeName");
var _templateObject, _templateObject2;
var fragments = {};
var getPermissionFragment = function getPermissionFragment(name) {
  var encodedName = getEncodedPermissionName(name);
  if (!fragments[encodedName]) {
    fragments[encodedName] = {
      applyFor: 'node',
      variables: (0, _defineProperty2["default"])({}, encodedName, 'String!'),
      gql: (0, _graphqlTag["default"])(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["fragment NodePermission_", " on JCRNode {\n                ", ":hasPermission(permissionName: $", ")\n            }"])), encodedName, encodedName, encodedName)
    };
  }
  return {
    fragment: fragments[encodedName],
    variables: (0, _defineProperty2["default"])({}, encodedName, name)
  };
};
exports.getPermissionFragment = getPermissionFragment;
var getSitePermissionFragment = function getSitePermissionFragment(name) {
  var encodedName = getEncodedPermissionName(name);
  if (!fragments['site_' + encodedName]) {
    fragments['site_' + encodedName] = {
      applyFor: 'node',
      variables: (0, _defineProperty2["default"])({}, encodedName, 'String!'),
      gql: (0, _graphqlTag["default"])(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["fragment SiteNodePermission_", " on JCRNode {\n                site {\n                    ...NodeCacheRequiredFields\n                    ", ":hasPermission(permissionName: $", ")\n                }\n            }"])), encodedName, encodedName, encodedName)
    };
  }
  return {
    fragment: fragments['site_' + encodedName],
    variables: (0, _defineProperty2["default"])({}, encodedName, name)
  };
};
exports.getSitePermissionFragment = getSitePermissionFragment;
var getEncodedPermissionName = function getEncodedPermissionName(name) {
  return 'permission_' + (0, _encodeName.encodeName)(name);
};
exports.getEncodedPermissionName = getEncodedPermissionName;
//# sourceMappingURL=getPermissionFragment.js.map
