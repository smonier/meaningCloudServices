"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getNodeTypeFragment = exports.getEncodedNodeTypeName = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _graphqlTag = _interopRequireDefault(require("graphql-tag"));
var _encodeName = require("./encodeName");
var _templateObject;
var fragments = {};
var getNodeTypeFragment = function getNodeTypeFragment(name) {
  var encodedName = getEncodedNodeTypeName(name);
  if (!fragments[encodedName]) {
    fragments[encodedName] = {
      applyFor: 'node',
      variables: (0, _defineProperty2["default"])({}, encodedName, 'InputNodeTypesInput!'),
      gql: (0, _graphqlTag["default"])(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["fragment NodeType_", " on JCRNode {\n                ", ":isNodeType(type: $", ")\n            }"])), encodedName, encodedName, encodedName)
    };
  }
  return {
    fragment: fragments[encodedName],
    variables: (0, _defineProperty2["default"])({}, encodedName, {
      types: name
    })
  };
};
exports.getNodeTypeFragment = getNodeTypeFragment;
var getEncodedNodeTypeName = function getEncodedNodeTypeName(name) {
  return 'nodeType_' + (0, _encodeName.encodeName)(name);
};
exports.getEncodedNodeTypeName = getEncodedNodeTypeName;
//# sourceMappingURL=getIsNodeTypeFragment.js.map
