{"version":3,"names":["_graphqlTag","_interopRequireDefault","require","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","displayName","variables","language","applyFor","gql","_taggedTemplateLiteral2","exports","primaryNodeType","displayLanguage","displayLanguageSet","parentNode","aggregatedPublicationInfo","aggregatedPublicationInfoSubNodes","aggregatedPublicationInfoIncludeReference","aggregatedPublicationInfoWithExistInLive","operationSupport","allProperties","getProperties","getPropertiesNames","installedModules","siteLanguages","displayableNode","lockInfo","subNodesCount","subNodesCountTypes","childNodeTypes","contentRestrictions","siteHomePage","nodeCacheRequiredFields","nodeTypeDisplayName","nodeTypeSubTypes","mimeTypes","PredefinedFragments"],"sources":["PredefinedFragments.ts"],"sourcesContent":["import gql from 'graphql-tag';\nimport {DocumentNode} from 'graphql';\n\nexport type Fragment = {\n    variables?: {\n        [key: string]: string\n    },\n    applyFor: string\n    gql: DocumentNode\n}\n\nexport const displayName: Fragment = {\n    variables: {\n        language: 'String!'\n    },\n    applyFor: 'node',\n    gql: gql`fragment DisplayName on JCRNode {\n        displayName(language:$language)\n    }`\n};\n\nexport const primaryNodeType: Fragment = {\n    variables: {\n        displayLanguage: 'String!',\n        displayLanguageSet: 'Boolean!'\n    },\n    applyFor: 'node',\n    gql: gql`fragment NodeInfoPrimaryNodeType on JCRNode {\n        primaryNodeType {\n            name\n            displayName(language: $displayLanguage) @include(if: $displayLanguageSet)\n            icon\n        }\n    }`\n};\n\nexport const parentNode: Fragment = {\n    applyFor: 'node',\n    gql: gql`fragment ParentNodeInfo on JCRNode {\n        parent {\n            path\n            name\n            ...NodeCacheRequiredFields\n        }\n    }`\n};\n\nexport const aggregatedPublicationInfo: Fragment = {\n    variables: {\n        language: 'String!',\n        aggregatedPublicationInfoSubNodes: 'Boolean',\n        aggregatedPublicationInfoIncludeReference: 'Boolean'\n    },\n    applyFor: 'node',\n    gql: gql`fragment AggregatedPublicationInfo on JCRNode {\n        aggregatedPublicationInfo(language: $language, subNodes: $aggregatedPublicationInfoSubNodes, references:$aggregatedPublicationInfoIncludeReference) {\n            publicationStatus\n        }\n    }`\n};\n\nexport const aggregatedPublicationInfoWithExistInLive: Fragment = {\n    variables: {\n        language: 'String!',\n        aggregatedPublicationInfoSubNodes: 'Boolean',\n        aggregatedPublicationInfoIncludeReference: 'Boolean'\n    },\n    applyFor: 'node',\n    gql: gql`fragment AggregatedPublicationInfoWithExistsInLive on JCRNode {\n        aggregatedPublicationInfo(language: $language, subNodes: $aggregatedPublicationInfoSubNodes, references:$aggregatedPublicationInfoIncludeReference) {\n            publicationStatus\n            existsInLive\n        }\n    }`\n};\n\nexport const operationSupport: Fragment = {\n    applyFor: 'node',\n    gql: gql`fragment OperationSupport on JCRNode {\n        operationsSupport {\n            lock\n            markForDeletion\n            publication\n        }\n    }`\n};\n\nexport const allProperties: Fragment = {\n    variables: {\n        language: 'String!'\n    },\n    applyFor: 'node',\n    gql: gql`fragment NodeAllProperties on JCRNode {\n        properties(language:$language) {\n            name\n            value\n            values\n        }\n    }`\n};\n\nexport const getProperties: Fragment = {\n    variables: {\n        language: 'String!',\n        getPropertiesNames: '[String!]!'\n    },\n    applyFor: 'node',\n    gql: gql`fragment NodeProperties on JCRNode {\n        properties(names: $getPropertiesNames, language: $language) {\n            name\n            value\n            values\n        }\n    }`\n};\n\nexport const installedModules: Fragment = {\n    applyFor: 'node',\n    gql: gql`fragment SiteInstalledModules on JCRNode {\n        site {\n            installedModulesWithAllDependencies\n            ...NodeCacheRequiredFields\n        }\n    }`\n};\n\nexport const siteLanguages: Fragment = {\n    applyFor: 'node',\n    gql: gql`fragment SiteLanguages on JCRNode {\n        site {\n            defaultLanguage\n            ...NodeCacheRequiredFields\n            languages {\n                displayName\n                language\n                activeInEdit\n            }\n        }\n    }`\n};\n\nexport const displayableNode: Fragment = {\n    applyFor: 'node',\n    gql: gql`fragment DisplayableNodePath on JCRNode {\n        displayableNode {\n            path\n            ...NodeCacheRequiredFields\n        }\n    }`\n};\n\nexport const lockInfo: Fragment = {\n    applyFor: 'node',\n    gql: gql`fragment LockInfo on JCRNode {\n        lockOwner: property(name: \"jcr:lockOwner\") {\n            value\n        }\n        lockTypes: property(name: \"j:lockTypes\") {\n            values\n        }\n    }`\n};\n\nexport const subNodesCount: Fragment = {\n    variables: {\n        subNodesCountTypes: '[String!]!'\n    },\n    applyFor: 'node',\n    gql: gql`fragment SubNodesCount on JCRNode {\n        subNodes: children(typesFilter: {types: $subNodesCountTypes, multi: ANY}) {\n            pageInfo {\n                totalCount\n            }\n        }\n    }`\n};\n\nexport const childNodeTypes: Fragment = {\n    applyFor: 'node',\n    gql: gql`fragment AllowedChildNodeType on JCRNode {\n        allowedChildNodeTypes(includeSubTypes: false) {\n            name\n        }\n    }`\n};\n\nexport const contentRestrictions: Fragment = {\n    applyFor: 'node',\n    gql: gql`fragment ContentRestriction on JCRNode {\n        contributeTypes: property(name: \"j:contributeTypes\") {\n            values\n        }\n        ancestors(fieldFilter: {filters: {evaluation: NOT_EMPTY, fieldName: \"contributeTypes\"}}) {\n            ...NodeCacheRequiredFields\n            contributeTypes : property(name: \"j:contributeTypes\") {\n                values\n            }\n        }\n    }`\n};\n\nexport const siteHomePage: Fragment = {\n    applyFor: 'node',\n    gql: gql`fragment NodeSiteHomePage on JCRNode {\n        children(typesFilter:{types:[\"jnt:page\"]}, propertiesFilter:{filters:[{property:\"j:isHomePage\", value:\"true\" }]}) {\n            nodes {\n                path\n                ...NodeCacheRequiredFields\n            }\n        }\n    }`\n};\n\nexport const nodeCacheRequiredFields: Fragment = {\n    applyFor: 'node',\n    gql: gql`fragment NodeCacheRequiredFields on JCRNode {\n        uuid\n        workspace\n        path\n    }`\n};\n\nexport const nodeTypeDisplayName: Fragment = {\n    variables: {\n        language: 'String!'\n    },\n    applyFor: 'nodeType',\n    gql: gql`fragment NodeTypeDisplayName on JCRNodeType {\n        displayName(language:$language)\n    }`\n};\n\nexport const nodeTypeSubTypes: Fragment = {\n    variables: {\n        language: 'String!'\n    },\n    applyFor: 'nodeType',\n    gql: gql`fragment NodeTypeSubTypes on JCRNodeType {\n        subTypes {\n            nodes {\n                name\n                displayName(language:$language)\n                abstract\n                mixin\n            }\n        }\n    }`\n};\n\nexport const mimeTypes: Fragment = {\n    applyFor: 'node',\n    gql: gql`fragment NodeInfoResourceNode on JCRNode {\n        resourceChildren: children(names: [\"jcr:content\"]) {\n            nodes {\n                ...NodeCacheRequiredFields\n                mimeType: property(name: \"jcr:mimeType\") {\n                    value\n                }\n            }\n        }\n    }`\n};\n\nexport const PredefinedFragments: {[key:string]: Fragment} = {\n    displayName,\n    primaryNodeType,\n    parentNode,\n    aggregatedPublicationInfo,\n    operationSupport,\n    allProperties,\n    getProperties,\n    installedModules,\n    siteLanguages,\n    displayableNode,\n    lockInfo,\n    subNodesCount,\n    contentRestrictions,\n    siteHomePage,\n    nodeCacheRequiredFields,\n    nodeTypeDisplayName,\n    nodeTypeSubTypes,\n    mimeTypes\n};\n"],"mappings":";;;;;;;;AAAA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA8B,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA;AAWvB,IAAMC,WAAqB,GAAG;EACjCC,SAAS,EAAE;IACPC,QAAQ,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAxB,eAAA,KAAAA,eAAA,OAAAyB,uBAAA;AAGZ,CAAC;AAACC,OAAA,CAAAN,WAAA,GAAAA,WAAA;AAEK,IAAMO,eAAyB,GAAG;EACrCN,SAAS,EAAE;IACPO,eAAe,EAAE,SAAS;IAC1BC,kBAAkB,EAAE;EACxB,CAAC;EACDN,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAvB,gBAAA,KAAAA,gBAAA,OAAAwB,uBAAA;AAOZ,CAAC;AAACC,OAAA,CAAAC,eAAA,GAAAA,eAAA;AAEK,IAAMG,UAAoB,GAAG;EAChCP,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAtB,gBAAA,KAAAA,gBAAA,OAAAuB,uBAAA;AAOZ,CAAC;AAACC,OAAA,CAAAI,UAAA,GAAAA,UAAA;AAEK,IAAMC,yBAAmC,GAAG;EAC/CV,SAAS,EAAE;IACPC,QAAQ,EAAE,SAAS;IACnBU,iCAAiC,EAAE,SAAS;IAC5CC,yCAAyC,EAAE;EAC/C,CAAC;EACDV,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAArB,gBAAA,KAAAA,gBAAA,OAAAsB,uBAAA;AAKZ,CAAC;AAACC,OAAA,CAAAK,yBAAA,GAAAA,yBAAA;AAEK,IAAMG,wCAAkD,GAAG;EAC9Db,SAAS,EAAE;IACPC,QAAQ,EAAE,SAAS;IACnBU,iCAAiC,EAAE,SAAS;IAC5CC,yCAAyC,EAAE;EAC/C,CAAC;EACDV,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAApB,gBAAA,KAAAA,gBAAA,OAAAqB,uBAAA;AAMZ,CAAC;AAACC,OAAA,CAAAQ,wCAAA,GAAAA,wCAAA;AAEK,IAAMC,gBAA0B,GAAG;EACtCZ,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAnB,gBAAA,KAAAA,gBAAA,OAAAoB,uBAAA;AAOZ,CAAC;AAACC,OAAA,CAAAS,gBAAA,GAAAA,gBAAA;AAEK,IAAMC,aAAuB,GAAG;EACnCf,SAAS,EAAE;IACPC,QAAQ,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAlB,gBAAA,KAAAA,gBAAA,OAAAmB,uBAAA;AAOZ,CAAC;AAACC,OAAA,CAAAU,aAAA,GAAAA,aAAA;AAEK,IAAMC,aAAuB,GAAG;EACnChB,SAAS,EAAE;IACPC,QAAQ,EAAE,SAAS;IACnBgB,kBAAkB,EAAE;EACxB,CAAC;EACDf,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAjB,gBAAA,KAAAA,gBAAA,OAAAkB,uBAAA;AAOZ,CAAC;AAACC,OAAA,CAAAW,aAAA,GAAAA,aAAA;AAEK,IAAME,gBAA0B,GAAG;EACtChB,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAhB,gBAAA,KAAAA,gBAAA,OAAAiB,uBAAA;AAMZ,CAAC;AAACC,OAAA,CAAAa,gBAAA,GAAAA,gBAAA;AAEK,IAAMC,aAAuB,GAAG;EACnCjB,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAf,iBAAA,KAAAA,iBAAA,OAAAgB,uBAAA;AAWZ,CAAC;AAACC,OAAA,CAAAc,aAAA,GAAAA,aAAA;AAEK,IAAMC,eAAyB,GAAG;EACrClB,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAd,iBAAA,KAAAA,iBAAA,OAAAe,uBAAA;AAMZ,CAAC;AAACC,OAAA,CAAAe,eAAA,GAAAA,eAAA;AAEK,IAAMC,QAAkB,GAAG;EAC9BnB,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAb,iBAAA,KAAAA,iBAAA,OAAAc,uBAAA;AAQZ,CAAC;AAACC,OAAA,CAAAgB,QAAA,GAAAA,QAAA;AAEK,IAAMC,aAAuB,GAAG;EACnCtB,SAAS,EAAE;IACPuB,kBAAkB,EAAE;EACxB,CAAC;EACDrB,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAZ,iBAAA,KAAAA,iBAAA,OAAAa,uBAAA;AAOZ,CAAC;AAACC,OAAA,CAAAiB,aAAA,GAAAA,aAAA;AAEK,IAAME,cAAwB,GAAG;EACpCtB,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAX,iBAAA,KAAAA,iBAAA,OAAAY,uBAAA;AAKZ,CAAC;AAACC,OAAA,CAAAmB,cAAA,GAAAA,cAAA;AAEK,IAAMC,mBAA6B,GAAG;EACzCvB,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAV,iBAAA,KAAAA,iBAAA,OAAAW,uBAAA;AAWZ,CAAC;AAACC,OAAA,CAAAoB,mBAAA,GAAAA,mBAAA;AAEK,IAAMC,YAAsB,GAAG;EAClCxB,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAT,iBAAA,KAAAA,iBAAA,OAAAU,uBAAA;AAQZ,CAAC;AAACC,OAAA,CAAAqB,YAAA,GAAAA,YAAA;AAEK,IAAMC,uBAAiC,GAAG;EAC7CzB,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAR,iBAAA,KAAAA,iBAAA,OAAAS,uBAAA;AAKZ,CAAC;AAACC,OAAA,CAAAsB,uBAAA,GAAAA,uBAAA;AAEK,IAAMC,mBAA6B,GAAG;EACzC5B,SAAS,EAAE;IACPC,QAAQ,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE,UAAU;EACpBC,GAAG,MAAEA,sBAAG,EAAAP,iBAAA,KAAAA,iBAAA,OAAAQ,uBAAA;AAGZ,CAAC;AAACC,OAAA,CAAAuB,mBAAA,GAAAA,mBAAA;AAEK,IAAMC,gBAA0B,GAAG;EACtC7B,SAAS,EAAE;IACPC,QAAQ,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE,UAAU;EACpBC,GAAG,MAAEA,sBAAG,EAAAN,iBAAA,KAAAA,iBAAA,OAAAO,uBAAA;AAUZ,CAAC;AAACC,OAAA,CAAAwB,gBAAA,GAAAA,gBAAA;AAEK,IAAMC,SAAmB,GAAG;EAC/B5B,QAAQ,EAAE,MAAM;EAChBC,GAAG,MAAEA,sBAAG,EAAAL,iBAAA,KAAAA,iBAAA,OAAAM,uBAAA;AAUZ,CAAC;AAACC,OAAA,CAAAyB,SAAA,GAAAA,SAAA;AAEK,IAAMC,mBAA6C,GAAG;EACzDhC,WAAW,EAAXA,WAAW;EACXO,eAAe,EAAfA,eAAe;EACfG,UAAU,EAAVA,UAAU;EACVC,yBAAyB,EAAzBA,yBAAyB;EACzBI,gBAAgB,EAAhBA,gBAAgB;EAChBC,aAAa,EAAbA,aAAa;EACbC,aAAa,EAAbA,aAAa;EACbE,gBAAgB,EAAhBA,gBAAgB;EAChBC,aAAa,EAAbA,aAAa;EACbC,eAAe,EAAfA,eAAe;EACfC,QAAQ,EAARA,QAAQ;EACRC,aAAa,EAAbA,aAAa;EACbG,mBAAmB,EAAnBA,mBAAmB;EACnBC,YAAY,EAAZA,YAAY;EACZC,uBAAuB,EAAvBA,uBAAuB;EACvBC,mBAAmB,EAAnBA,mBAAmB;EACnBC,gBAAgB,EAAhBA,gBAAgB;EAChBC,SAAS,EAATA;AACJ,CAAC;AAACzB,OAAA,CAAA0B,mBAAA,GAAAA,mBAAA"}