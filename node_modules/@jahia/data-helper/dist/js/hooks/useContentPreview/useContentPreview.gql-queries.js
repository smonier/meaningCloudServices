"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CONTENT_PREVIEW_QUERY = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _graphqlTag = _interopRequireDefault(require("graphql-tag"));
var _fragments = require("../../fragments");
var _templateObject;
var CONTENT_PREVIEW_QUERY = (0, _graphqlTag["default"])(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["query previewQueryByWorkspace($path: String!, $templateType: String!, $view: String!, $contextConfiguration: String!, $language: String!, $workspace: Workspace!, $requestAttributes: [InputRenderRequestAttributeInput]) {\n    jcr(workspace: $workspace) {\n        nodeByPath(path: $path) {\n            id: uuid\n            isFile: isNodeType(type: {types: [\"jnt:file\"]})\n            path\n            lastModified: property(name: \"jcr:lastModified\", language: $language) {\n                value\n            }\n            renderedContent(templateType: $templateType, view: $view, contextConfiguration: $contextConfiguration, language: $language, requestAttributes: $requestAttributes) {\n                output\n                staticAssets(type: \"css\") {\n                    key\n                }\n            }\n            ...NodeInfoResourceNode\n            ...NodeCacheRequiredFields\n        }\n    }\n}", "", ""])), _fragments.nodeCacheRequiredFields.gql, _fragments.mimeTypes.gql);
exports.CONTENT_PREVIEW_QUERY = CONTENT_PREVIEW_QUERY;
//# sourceMappingURL=useContentPreview.gql-queries.js.map
