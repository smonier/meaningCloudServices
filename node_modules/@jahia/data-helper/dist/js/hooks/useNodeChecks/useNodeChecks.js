"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useNodeChecks = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _useNodeInfo2 = require("../useNodeInfo");
var _excluded = ["requiredPermission", "requiredSitePermission", "showOnNodeTypes", "hideOnNodeTypes", "requireModuleInstalledOnSite", "showForPaths", "hideForPaths"],
  _excluded2 = ["node", "nodes", "loading"];
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var evaluateVisibilityPaths = function evaluateVisibilityPaths(visible, visibilityPaths, nodePath) {
  for (var i = 0; i < visibilityPaths.length; i++) {
    if (new RegExp(visibilityPaths[i]).test(nodePath)) {
      return visible;
    }
  }
  return !visible;
};
function addArrayOptionValues(newValue, useNodeInfoOptions, useNodeInfoKey) {
  if (newValue) {
    useNodeInfoOptions[useNodeInfoKey] = useNodeInfoOptions[useNodeInfoKey] || [];
    useNodeInfoOptions[useNodeInfoKey] = useNodeInfoOptions[useNodeInfoKey].concat(newValue.filter(function (item) {
      return useNodeInfoOptions[useNodeInfoKey].indexOf(item) < 0;
    }));
  }
}
var useNodeChecks = function useNodeChecks(variables, options, queryOptions) {
  var requiredPermission = options.requiredPermission,
    requiredSitePermission = options.requiredSitePermission,
    showOnNodeTypes = options.showOnNodeTypes,
    hideOnNodeTypes = options.hideOnNodeTypes,
    requireModuleInstalledOnSite = options.requireModuleInstalledOnSite,
    showForPaths = options.showForPaths,
    hideForPaths = options.hideForPaths,
    othersOptions = (0, _objectWithoutProperties2["default"])(options, _excluded);
  var useNodeInfoOptions = _objectSpread({}, othersOptions);
  var requiredPermissions = typeof requiredPermission === 'string' ? [requiredPermission] : requiredPermission;
  var requiredSitePermissions = typeof requiredSitePermission === 'string' ? [requiredSitePermission] : requiredSitePermission;
  addArrayOptionValues(requiredPermissions, useNodeInfoOptions, 'getPermissions');
  addArrayOptionValues(requiredSitePermissions, useNodeInfoOptions, 'getSitePermissions');
  addArrayOptionValues(showOnNodeTypes, useNodeInfoOptions, 'getIsNodeTypes');
  addArrayOptionValues(hideOnNodeTypes, useNodeInfoOptions, 'getIsNodeTypes');
  if (requireModuleInstalledOnSite) {
    useNodeInfoOptions.getSiteInstalledModules = true;
  }
  var _useNodeInfo = (0, _useNodeInfo2.useNodeInfo)(variables, useNodeInfoOptions, queryOptions),
    node = _useNodeInfo.node,
    nodes = _useNodeInfo.nodes,
    loading = _useNodeInfo.loading,
    othersResults = (0, _objectWithoutProperties2["default"])(_useNodeInfo, _excluded2);
  if (loading) {
    return _objectSpread({
      loading: loading
    }, othersResults);
  }
  if (!node && !nodes) {
    return _objectSpread({
      checksResult: false,
      loading: loading
    }, othersResults);
  }
  var doNodeCheck = function doNodeCheck(currentNode) {
    return (!requiredPermissions || requiredPermissions.reduce(function (acc, val) {
      return acc || currentNode[val];
    }, false)) && (!requiredSitePermissions || requiredSitePermissions.reduce(function (acc, val) {
      return acc || currentNode.site[val];
    }, false)) && (!showOnNodeTypes || showOnNodeTypes.reduce(function (acc, val) {
      return acc || currentNode[val];
    }, false)) && (!hideOnNodeTypes || !hideOnNodeTypes.reduce(function (acc, val) {
      return acc || currentNode[val];
    }, false)) && (!requireModuleInstalledOnSite || requireModuleInstalledOnSite.reduce(function (acc, val) {
      return acc && currentNode.site.installedModulesWithAllDependencies.includes(val);
    }, true)) && (!hideForPaths || evaluateVisibilityPaths(false, hideForPaths, currentNode.path || variables.path)) && (!showForPaths || evaluateVisibilityPaths(true, showForPaths, currentNode.path || variables.path));
  };
  var result = node ? doNodeCheck(node) : nodes.reduce(function (acc, val) {
    return acc && doNodeCheck(val);
  }, true);
  return _objectSpread({
    node: node,
    nodes: nodes,
    checksResult: result,
    loading: loading
  }, othersResults);
};
exports.useNodeChecks = useNodeChecks;
//# sourceMappingURL=useNodeChecks.js.map
