"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMemoRequest = useMemoRequest;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _useNodeInfo = require("./useNodeInfo.gql-queries");
var _react = require("react");
var _fastDeepEqual = _interopRequireDefault(require("fast-deep-equal"));
var clean = function clean(obj) {
  return obj && Object.fromEntries(Object.entries(obj).filter(function (_ref) {
    var _ref2 = (0, _slicedToArray2["default"])(_ref, 2),
      v = _ref2[1];
    return v !== null && v !== undefined;
  }));
};
var cleanVariables = function cleanVariables(obj) {
  return obj && Object.fromEntries(Object.entries(obj).filter(function (_ref3) {
    var _ref4 = (0, _slicedToArray2["default"])(_ref3, 2),
      v = _ref4[1];
    return v !== null && v !== undefined;
  }));
};
var cleanOptions = function cleanOptions(obj) {
  return obj && Object.fromEntries(Object.entries(obj).filter(function (_ref5) {
    var _ref6 = (0, _slicedToArray2["default"])(_ref5, 2),
      k = _ref6[0],
      v = _ref6[1];
    return v !== null && v !== undefined && _useNodeInfo.validOptions.indexOf(k) !== -1;
  }));
};
function useMemoRequest(variables, queryOptions, options, setResult) {
  variables = cleanVariables(variables);
  queryOptions = clean(queryOptions);
  options = cleanOptions(options);
  var requestValue = {
    variables: variables,
    queryOptions: queryOptions,
    options: options,
    setResult: setResult
  };
  var requestRef = (0, _react.useRef)(requestValue);
  if (!(0, _fastDeepEqual["default"])(variables, requestRef.current.variables) || !(0, _fastDeepEqual["default"])(queryOptions, requestRef.current.queryOptions) || !(0, _fastDeepEqual["default"])(options, requestRef.current.options)) {
    requestRef.current = requestValue;
  }
  return [requestRef.current, requestRef.current === requestValue];
}
//# sourceMappingURL=useMemoRequest.js.map
