{"version":3,"names":["useMemo","registry","getIframeRenderer","Tree","useAdminRouteTreeStructure","target","selected","result","getAllRoutes","baseTarget","parent","arguments","length","undefined","find","type","flatMap","route","concat","_toConsumableArray","key","map","_objectSpread","render","iframeUrl","routes","createTree","filter","omitFromTree","children","tree","allPermissions","requiredPermission","item","pos","self","indexOf","defaultOpenedItems","selectedItem","get","parentTarget","targets","t","id","startsWith","substr","push"],"sources":["useAdminRoutesTreeStructure.ts"],"sourcesContent":["import {useMemo} from 'react';\nimport {registry} from '~/registry';\nimport {getIframeRenderer} from '~/IframeRenderer';\nimport {Tree, TreeData} from './Tree';\nimport {StoredService} from '~/registry/service';\n\nexport const useAdminRouteTreeStructure = function (target: string, selected: string) {\n    const result = useMemo(() => {\n        const getAllRoutes = (baseTarget: string, parent = ''): StoredService[] => registry.find({\n            type: 'adminRoute',\n            target: baseTarget + parent\n        })\n            .flatMap(route => [route, ...getAllRoutes(baseTarget, '-' + route.key)])\n            .map(route => ({\n                ...route,\n                render: route.render || (typeof route.iframeUrl === 'string' && (() => getIframeRenderer(route.iframeUrl as string)))\n            }));\n\n        const routes = getAllRoutes(target);\n\n        const createTree = (baseTarget: string, parent = ''): TreeData[] => registry.find({type: 'adminRoute', target: baseTarget + parent})\n            .filter(route => !route.omitFromTree)\n            .map(route => ({\n                ...route,\n                children: createTree(baseTarget, '-' + route.key)\n            }));\n\n        const tree = new Tree(createTree(target));\n\n        const allPermissions = routes\n            .filter(route => route.requiredPermission)\n            .map(route => route.requiredPermission)\n            .filter((item, pos, self) => self.indexOf(item) === pos);\n\n        return {\n            routes, tree, allPermissions\n        };\n    }, [target]);\n\n    const {tree, routes, allPermissions} = result;\n    const defaultOpenedItems: string[] = [];\n\n    if (selected) {\n        let selectedItem = registry.get('adminRoute', selected);\n        while (selectedItem) {\n            const parentTarget = selectedItem.targets.find(t => t.id.startsWith(target + '-'));\n            if (parentTarget) {\n                const parent = parentTarget.id.substr(target.length + 1);\n                defaultOpenedItems.push(parent);\n                selectedItem = registry.get('adminRoute', parent);\n            } else {\n                selectedItem = null;\n            }\n        }\n    }\n\n    return {\n        tree,\n        defaultOpenedItems,\n        routes,\n        allPermissions\n    };\n};\n"],"mappings":"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"}