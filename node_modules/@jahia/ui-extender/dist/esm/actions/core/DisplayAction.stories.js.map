{"version":3,"names":["React","useEffect","useState","storiesOf","DisplayAction","registry","withKnobs","PropTypes","markdownNotes","ButtonRenderer","LinkRenderer","module","addParameters","component","notes","markdown","addDecorator","add","addOrReplace","label","onClick","context","window","alert","path","createElement","Fragment","className","actionKey","render","style","margin","base","param","arrayExample","event","superMethod","confirm","TestComponent1","_ref","Render","_objectSpread","propTypes","object","isRequired","func","_ref2","TestComponent2","_ref3","refOrContext","Previous","AsyncComponent","_ref4","_useState","_useState2","_slicedToArray","value","setValue","t","setInterval","clearInterval","SpawnActionsComponent","_ref5","names","map","name","key"],"sources":["DisplayAction.stories.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {storiesOf} from '@storybook/react';\nimport {DisplayAction} from './DisplayAction';\nimport {registry} from '../../registry';\nimport {withKnobs} from '@storybook/addon-knobs';\nimport PropTypes from 'prop-types';\nimport markdownNotes from './DisplayAction.md';\nimport {ButtonRenderer} from '../samples/ButtonRenderer';\nimport {LinkRenderer} from '../samples/LinkRenderer';\n\nstoriesOf('actions|DisplayAction', module)\n    .addParameters({\n        component: DisplayAction,\n        notes: {markdown: markdownNotes}\n    })\n    .addDecorator(withKnobs)\n    .add('default', () => {\n        registry.addOrReplace('action', 'test-action-1', {\n            label: 'Simple action',\n            onClick: context => window.alert('action 1 on ' + context.path) // eslint-disable-line no-alert\n        });\n\n        return (\n            <>\n                <div className='description'>Display a single action</div>\n                <div>\n                    <DisplayAction actionKey='test-action-1' context={{path: '/test1'}} render={ButtonRenderer}/>\n                </div>\n            </>\n        );\n    })\n    .add('Simple action', () => {\n        registry.addOrReplace('action', 'test-action-1', {\n            label: 'test action 1',\n            onClick: context => window.alert('action 1 on ' + context.path) // eslint-disable-line no-alert\n        });\n        registry.addOrReplace('action', 'test-action-2', {\n            label: 'test action 2',\n            onClick: context => window.alert('action 2 on ' + context.path) // eslint-disable-line no-alert\n        });\n        return (\n            <>\n                <div className='description'>Display multiple actions with different contexts</div>\n                <div>\n                    <span style={{margin: '10px'}}>path = /test1</span>\n                    <DisplayAction\n                        actionKey='test-action-1'\n                        context={{path: '/test1'}}\n                        render={ButtonRenderer}/>\n                    <DisplayAction\n                        actionKey='test-action-2'\n                        context={{path: '/test1'}}\n                        render={ButtonRenderer}/>\n                </div>\n                <div>\n                    <span style={{margin: '10px'}}>path = /test2</span>\n                    <DisplayAction\n                        actionKey='test-action-1'\n                        context={{path: '/test2'}}\n                        render={ButtonRenderer}/>\n                    <DisplayAction\n                        actionKey='test-action-2'\n                        context={{path: '/test2'}}\n                        render={ButtonRenderer}/>\n                </div>\n                <div>\n                    <span style={{margin: '10px'}}>path = /test3</span>\n                    <DisplayAction\n                        actionKey='test-action-1'\n                        context={{path: '/test3'}}\n                        render={ButtonRenderer}/>\n                    <DisplayAction\n                        actionKey='test-action-2'\n                        context={{path: '/test3'}}\n                        render={ButtonRenderer}/>\n                </div>\n            </>\n        );\n    })\n    .add('Renderer', () => {\n        registry.addOrReplace('action', 'test-action-1', {\n            label: 'test action 1',\n            onClick: context => window.alert('action 1 on ' + context.path) // eslint-disable-line no-alert\n        });\n\n        return (\n            <>\n                <div className='description'>\n                    The same action can be rendered differently, depending on the render property\n                </div>\n                <div>\n                    <span style={{margin: '10px'}}>Button renderer : </span>\n                    <DisplayAction\n                        actionKey='test-action-1'\n                        context={{path: '/test'}}\n                        render={ButtonRenderer}/>\n                </div>\n                <div>\n                    <span style={{margin: '10px'}}>Link renderer : </span>\n                    <DisplayAction\n                        actionKey='test-action-1'\n                        context={{path: '/test'}}\n                        render={LinkRenderer}/>\n                </div>\n            </>\n        );\n    })\n    .add('Composition', () => {\n        const base = registry.addOrReplace('action', 'base', {\n            onClick: context => window.alert('composed action - label=' + context.param + ', array=' + context.arrayExample), // eslint-disable-line no-alert\n            arrayExample: ['value1']\n        });\n        registry.addOrReplace('action', 'compose-1', base, {\n            param: '1',\n            label: 'compose 1',\n            arrayExample: ['value2']\n        });\n        registry.addOrReplace('action', 'compose-2', base, {\n            param: '2',\n            label: 'compose 2',\n            onClick: (context, event, superMethod) => window.confirm('composed action - do you want to call overriden action ?') && superMethod(context, event) // eslint-disable-line no-alert\n        });\n\n        return (\n            <>\n                <div className='description'>Create a new action by extending an existing action, by adding or replacing information\n                    in context. Overriding context is merged with the base one following these rules :\n                    <ul>\n                        <li>Arrays are concatenated</li>\n                        <li>Functions are replaced, but the overriden function is passed as the last argument on call</li>\n                        <li>Other attributes are replaced</li>\n                    </ul>\n                </div>\n                <div>\n                    <DisplayAction\n                        actionKey='compose-1'\n                        context={{path: '/test1'}}\n                        render={ButtonRenderer}/>\n                    <DisplayAction\n                        actionKey='compose-2'\n                        context={{path: '/test1'}}\n                        render={ButtonRenderer}/>\n                </div>\n            </>\n        );\n    })\n    .add('Component action', () => {\n        const TestComponent1 = ({context, render: Render}) => (\n            <Render context={{\n                ...context,\n                onClick: () => window.alert('Component action') // eslint-disable-line no-alert\n            }}/>\n        );\n\n        TestComponent1.propTypes = {\n            context: PropTypes.object.isRequired,\n            render: PropTypes.func.isRequired\n        };\n\n        registry.addOrReplace('action', 'component-1', {\n            label: 'component 1',\n            component: TestComponent1\n        });\n        return (\n            <>\n                <div className='description'>\n                    Action rendering is fully handled by a dedicated component, delegating to render for displaying the\n                    button\n                </div>\n                <div>\n                    <DisplayAction actionKey='component-1' context={{path: '/test1'}} render={ButtonRenderer}/>\n                </div>\n            </>\n        );\n    })\n    .add('Component composition', () => {\n        const TestComponent1 = ({context, render: Render}) => (\n            <Render context={{\n                ...context,\n                onClick: () => window.alert('Component action') // eslint-disable-line no-alert\n            }}/>\n        );\n\n        TestComponent1.propTypes = {\n            context: PropTypes.object.isRequired,\n            render: PropTypes.func.isRequired\n        };\n\n        const TestComponent2 = ({context, render}, refOrContext, Previous) => (\n            <Previous render={render} context={{...context, label: context.label + ' overriden'}}/>\n        );\n\n        TestComponent2.propTypes = {\n            context: PropTypes.object.isRequired,\n            render: PropTypes.func.isRequired\n        };\n\n        const base = registry.addOrReplace('action', 'base', {\n            component: TestComponent1\n        });\n        registry.addOrReplace('action', 'component-compose-1', base, {\n            label: 'compose 1'\n        });\n        registry.addOrReplace('action', 'component-compose-2', base, {\n            label: 'compose 2',\n            component: TestComponent2\n        });\n        return (\n            <>\n                <div className='description'>\n                    Component actions can also be composed - the overriden component can still be used as its passed to the render function as last parameter.\n                </div>\n                <div>\n                    <DisplayAction actionKey='component-compose-1' context={{path: '/test1'}} render={ButtonRenderer}/>\n                    <DisplayAction actionKey='component-compose-2' context={{path: '/test1'}} render={ButtonRenderer}/>\n                </div>\n            </>\n        );\n    })\n    .add('Async component action', () => {\n        const AsyncComponent = ({context, render: Render}) => {\n            const [value, setValue] = useState(1);\n            useEffect(() => {\n                const t = setInterval(() => setValue(value + 1), 1000);\n                return () => {\n                    clearInterval(t);\n                };\n            });\n            return (value > 1) ? (\n                <Render context={{\n                    ...context,\n                    label: context.label + value,\n                    onClick: () => window.alert('Async action') // eslint-disable-line no-alert\n                }}/>\n            ) : (\n                <span>loading..</span>\n            );\n        };\n\n        AsyncComponent.propTypes = {\n            context: PropTypes.object.isRequired,\n            render: PropTypes.func.isRequired\n        };\n\n        registry.addOrReplace('action', 'async', {\n            label: 'async',\n            component: AsyncComponent\n        });\n\n        return (\n            <>\n                <div className='description'>\n                    An action can render asynchronously and update its context\n                </div>\n                <div>\n                    <DisplayAction actionKey='async' context={{path: '/test1'}} render={ButtonRenderer}/>\n                </div>\n            </>\n        );\n    })\n    .add('Spawn actions', () => {\n        const SpawnActionsComponent = ({context, render: Render}) => context.names.map(name => (\n            <Render\n                key={name}\n                context={{\n                            ...context,\n                            label: context.label + ' ' + name,\n                            onClick: () => window.alert('Spawn action ' + name) // eslint-disable-line no-alert\n                        }}/>\n        ));\n\n        SpawnActionsComponent.propTypes = {\n            context: PropTypes.object.isRequired,\n            render: PropTypes.func.isRequired\n        };\n\n        registry.addOrReplace('action', 'spawn', {\n            label: 'child action',\n            names: ['child1', 'child2', 'child3'],\n            component: SpawnActionsComponent\n        });\n\n        return (\n            <>\n                <div className='description'>\n                    A single action can spawn multiple buttons\n                </div>\n                <div>\n                    <DisplayAction actionKey='spawn' context={{path: '/test1'}} render={ButtonRenderer}/>\n                </div>\n            </>\n        );\n    });\n"],"mappings":"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"}