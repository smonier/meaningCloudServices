import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["target", "filter"];
import React from 'react';
import PropTypes from 'prop-types';
import { registry } from "../../registry";
import { DisplayAction } from "./DisplayAction";
export var DisplayActions = function DisplayActions(_ref) {
  var target = _ref.target,
    filter = _ref.filter,
    others = _objectWithoutProperties(_ref, _excluded);
  var actionsToDisplay = registry.find({
    type: 'action',
    target: target
  });
  if (filter) {
    actionsToDisplay = actionsToDisplay && actionsToDisplay.filter(filter);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, actionsToDisplay.map(function (action) {
    return /*#__PURE__*/React.createElement(DisplayAction, _extends({}, others, {
      key: action.key,
      target: target,
      actionKey: action.key
    }));
  }));
};
DisplayActions.defaultProps = {
  filter: null
};
DisplayActions.propTypes = {
  /**
       * The action context
       */
  context: PropTypes.object,
  /**
   * The target from which the items will be selected
   */
  target: PropTypes.string.isRequired,
  /**
   * The render component
   */
  render: PropTypes.func.isRequired,
  /**
   * The loading component
   */
  loading: PropTypes.func,
  /**
   * Additional filter function
   */
  filter: PropTypes.func
};
//# sourceMappingURL=DisplayActions.js.map
