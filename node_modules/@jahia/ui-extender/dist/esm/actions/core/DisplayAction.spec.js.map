{"version":3,"names":["React","useEffect","useState","DisplayAction","registry","mount","ButtonRenderer","LinkRenderer","PropTypes","act","jest","useFakeTimers","describe","beforeEach","clear","it","action","addOrReplace","label","onClick","fn","wrapper","createElement","actionKey","path","render","expect","mock","calls","length","toBe","find","simulate","fn1","value","Fragment","forEach","b","fn2","base","arrayExample","param","TestComponent1","_ref","Render","props","_objectWithoutProperties","_excluded","_extends","propTypes","func","isRequired","component","_ref2","_excluded2","TestComponent2","_ref3","refOrContext","Previous","_excluded3","extended","string","AsyncComponent","_ref4","_excluded4","_useState","_useState2","_slicedToArray","setValue","t","setInterval","clearInterval","toHaveBeenCalledTimes","advanceTimersByTime","update","SpawnActionsComponent","_ref5","names","_excluded5","map","name","key","arrayOf"],"sources":["DisplayAction.spec.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {DisplayAction} from './DisplayAction';\nimport {registry} from '../../registry';\nimport {mount} from 'enzyme';\nimport {ButtonRenderer} from '../samples/ButtonRenderer';\nimport {LinkRenderer} from '../samples/LinkRenderer';\nimport PropTypes from 'prop-types';\nimport {act} from 'react-dom/test-utils';\n\njest.useFakeTimers();\n\ndescribe('DisplayAction', () => {\n    beforeEach(() => {\n        registry.clear();\n    });\n\n    it('should call onClick when button is click', () => {\n        const action = registry.addOrReplace('action', 'test-action-1', {\n            label: 'Simple action',\n            onClick: jest.fn()\n        });\n\n        const wrapper = mount(<DisplayAction\n            actionKey='test-action-1'\n            path='/test1'\n            render={ButtonRenderer}/>);\n\n        expect(action.onClick.mock.calls.length).toBe(0);\n        wrapper.find('button').simulate('click');\n        expect(action.onClick.mock.calls.length).toBe(1);\n    });\n\n    it('should call method with different values', () => {\n        const fn1 = jest.fn();\n\n        registry.addOrReplace('action', 'test-action-1', {\n            label: 'test action 1',\n            value: 'test1',\n            onClick: fn1\n        });\n        registry.addOrReplace('action', 'test-action-2', {\n            label: 'test action 2',\n            value: 'test2',\n            onClick: fn1\n        });\n        const wrapper = mount(\n            <>\n                <DisplayAction\n                    actionKey='test-action-1'\n                    path='/test1'\n                    render={ButtonRenderer}/>\n                <DisplayAction\n                    actionKey='test-action-2'\n                    path='/test1'\n                    render={ButtonRenderer}/>\n            </>\n        );\n        wrapper.find('button').forEach(b => b.simulate('click'));\n        expect(fn1.mock.calls.length).toBe(2);\n        expect(fn1.mock.calls[0][0].value).toBe('test1');\n        expect(fn1.mock.calls[1][0].value).toBe('test2');\n    });\n\n    it('should call method with different contexts', () => {\n        const fn1 = jest.fn();\n\n        registry.addOrReplace('action', 'test-action-1', {\n            label: 'test action 1',\n            onClick: fn1\n        });\n        const wrapper = mount(\n            <>\n                <DisplayAction\n                    actionKey='test-action-1'\n                    path='/test1'\n                    render={ButtonRenderer}/>\n                <DisplayAction\n                    actionKey='test-action-1'\n                    path='/test2'\n                    render={ButtonRenderer}/>\n            </>\n        );\n        wrapper.find('button').forEach(b => b.simulate('click'));\n        expect(fn1.mock.calls.length).toBe(2);\n        expect(fn1.mock.calls[0][0].path).toBe('/test1');\n        expect(fn1.mock.calls[1][0].path).toBe('/test2');\n    });\n\n    it('Renderer', () => {\n        registry.addOrReplace('action', 'test-action-1', {\n            label: 'test action 1',\n            onClick: jest.fn()\n        });\n\n        const wrapper = mount(\n            <>\n                <DisplayAction\n                    actionKey='test-action-1'\n                    path='/test'\n                    render={ButtonRenderer}/>\n                <DisplayAction\n                    actionKey='test-action-1'\n                    path='/test'\n                    render={LinkRenderer}/>\n            </>\n        );\n\n        expect(wrapper.find('button').length).toBe(1);\n        expect(wrapper.find('span').length).toBe(1);\n    });\n\n    it('should handle composition on onClick', () => {\n        const fn1 = jest.fn();\n        const fn2 = jest.fn();\n\n        const base = registry.addOrReplace('action', 'base', {\n            onClick: fn1,\n            arrayExample: ['value1']\n        });\n        registry.addOrReplace('action', 'compose-1', base, {\n            param: '1',\n            label: 'compose 1',\n            arrayExample: ['value2']\n        });\n        registry.addOrReplace('action', 'compose-2', base, {\n            param: '2',\n            label: 'compose 2',\n            onClick: fn2\n        });\n\n        const wrapper = mount(\n            <>\n                <DisplayAction\n                    actionKey='compose-1'\n                    path='/test1'\n                    render={ButtonRenderer}/>\n                <DisplayAction\n                    actionKey='compose-2'\n                    path='/test1'\n                    render={ButtonRenderer}/>\n            </>\n        );\n\n        wrapper.find('button').forEach(b => b.simulate('click'));\n\n        expect(fn1.mock.calls.length).toBe(1);\n        expect(fn1.mock.calls[0][0].param).toBe('1');\n\n        expect(fn2.mock.calls.length).toBe(1);\n        expect(fn2.mock.calls[0][0].param).toBe('2');\n        expect(fn2.mock.calls[0][2]).toBe(fn1);\n    });\n\n    it('should render component action', () => {\n        const fn1 = jest.fn();\n        const TestComponent1 = ({render: Render, ...props}) => (\n            <Render {...props} onClick={fn1}/>\n        );\n\n        TestComponent1.propTypes = {\n            render: PropTypes.func.isRequired\n        };\n\n        registry.addOrReplace('action', 'component-1', {\n            label: 'component 1',\n            component: TestComponent1\n        });\n        const wrapper = mount(\n            <DisplayAction actionKey='component-1' path='/test1' render={ButtonRenderer}/>\n        );\n\n        wrapper.find('button').simulate('click');\n        expect(fn1.mock.calls.length).toBe(1);\n        expect(fn1.mock.calls[0][0].path).toBe('/test1');\n    });\n\n    it('handle component composition', () => {\n        const fn1 = jest.fn();\n\n        const TestComponent1 = ({render: Render, ...props}) => (\n            <Render {...props} onClick={fn1}/>\n        );\n\n        TestComponent1.propTypes = {\n            render: PropTypes.func.isRequired\n        };\n\n        const TestComponent2 = ({render, label, ...props}, refOrContext, Previous) => (\n            <Previous extended render={render} label={label + ' overriden'} {...props}/>\n        );\n\n        TestComponent2.propTypes = {\n            label: PropTypes.string.isRequired,\n            render: PropTypes.func.isRequired\n        };\n\n        const base = registry.addOrReplace('action', 'base', {\n            component: TestComponent1\n        });\n        registry.addOrReplace('action', 'component-compose-1', base, {\n            param: '1',\n            label: 'compose 1'\n        });\n        registry.addOrReplace('action', 'component-compose-2', base, {\n            param: '2',\n            label: 'compose 2',\n            component: TestComponent2\n        });\n        const wrapper = mount(\n            <>\n                <DisplayAction actionKey='component-compose-1' path='/test1' render={ButtonRenderer}/>\n                <DisplayAction actionKey='component-compose-2' path='/test1' render={ButtonRenderer}/>\n            </>\n        );\n\n        wrapper.find('button').forEach(b => b.simulate('click'));\n        expect(fn1.mock.calls.length).toBe(2);\n        expect(fn1.mock.calls[0][0].path).toBe('/test1');\n        expect(fn1.mock.calls[0][0].param).toBe('1');\n        expect(fn1.mock.calls[1][0].path).toBe('/test1');\n        expect(fn1.mock.calls[1][0].param).toBe('2');\n        expect(fn1.mock.calls[1][0].extended).toBe(true);\n    });\n\n    it('should update its rendering when using async components', () => {\n        const fn1 = jest.fn();\n\n        const AsyncComponent = ({render: Render, label, ...props}) => {\n            const [value, setValue] = useState(1);\n            useEffect(() => {\n                const t = setInterval(() => {\n                    act(() => setValue(value + 1));\n                }, 1000);\n                return () => {\n                    clearInterval(t);\n                };\n            });\n            return (value > 1) ? (\n                <Render\n                    label={label + value}\n                    value={value}\n                    {...props}\n                    onClick={fn1}/>\n            ) : (\n                <span>loading..</span>\n            );\n        };\n\n        AsyncComponent.propTypes = {\n            label: PropTypes.string.isRequired,\n            render: PropTypes.func.isRequired\n        };\n\n        registry.addOrReplace('action', 'async', {\n            label: 'async',\n            component: AsyncComponent\n        });\n\n        const wrapper = mount(\n            <DisplayAction actionKey='async' path='/test1' render={ButtonRenderer}/>\n        );\n        expect(setInterval).toHaveBeenCalledTimes(1);\n        expect(wrapper.find('button').length).toBe(0);\n\n        jest.advanceTimersByTime(1000);\n        wrapper.update();\n        expect(wrapper.find('button').length).toBe(1);\n        wrapper.find('button').simulate('click');\n        expect(fn1.mock.calls.length).toBe(1);\n        expect(fn1.mock.calls[0][0].value).toBe(2);\n    });\n\n    it('should be able to spawn multiple buttons', () => {\n        const fn1 = jest.fn();\n        const SpawnActionsComponent = ({render: Render, names, label, ...props}) => names.map(name => (\n            <Render\n                key={name}\n                name={name}\n                label={label + ' ' + name}\n                {...props}\n                onClick={fn1}/>\n        ));\n\n        SpawnActionsComponent.propTypes = {\n            label: PropTypes.string.isRequired,\n            names: PropTypes.arrayOf(PropTypes.string).isRequired,\n            render: PropTypes.func.isRequired\n        };\n\n        registry.addOrReplace('action', 'spawn', {\n            label: 'child action',\n            names: ['child1', 'child2', 'child3'],\n            component: SpawnActionsComponent\n        });\n\n        const wrapper = mount(\n            <DisplayAction actionKey='spawn' path='/test1' render={ButtonRenderer}/>\n        );\n\n        wrapper.find('button').forEach(b => b.simulate('click'));\n        expect(fn1.mock.calls.length).toBe(3);\n        expect(fn1.mock.calls[0][0].path).toBe('/test1');\n        expect(fn1.mock.calls[0][0].name).toBe('child1');\n        expect(fn1.mock.calls[1][0].name).toBe('child2');\n        expect(fn1.mock.calls[2][0].name).toBe('child3');\n    });\n});\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,aAAa;AACrB,SAAQC,QAAQ;AAChB,SAAQC,KAAK,QAAO,QAAQ;AAC5B,SAAQC,cAAc;AACtB,SAAQC,YAAY;AACpB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAAQC,GAAG,QAAO,sBAAsB;AAExCC,IAAI,CAACC,aAAa,CAAC,CAAC;AAEpBC,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC5BC,UAAU,CAAC,YAAM;IACbT,QAAQ,CAACU,KAAK,CAAC,CAAC;EACpB,CAAC,CAAC;EAEFC,EAAE,CAAC,0CAA0C,EAAE,YAAM;IACjD,IAAMC,MAAM,GAAGZ,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,eAAe,EAAE;MAC5DC,KAAK,EAAE,eAAe;MACtBC,OAAO,EAAET,IAAI,CAACU,EAAE,CAAC;IACrB,CAAC,CAAC;IAEF,IAAMC,OAAO,GAAGhB,KAAK,eAACL,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MAChCoB,SAAS,EAAC,eAAe;MACzBC,IAAI,EAAC,QAAQ;MACbC,MAAM,EAAEnB;IAAe,CAAC,CAAC,CAAC;IAE9BoB,MAAM,CAACV,MAAM,CAACG,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAChDT,OAAO,CAACU,IAAI,CAAC,QAAQ,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC;IACxCN,MAAM,CAACV,MAAM,CAACG,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACpD,CAAC,CAAC;EAEFf,EAAE,CAAC,0CAA0C,EAAE,YAAM;IACjD,IAAMkB,GAAG,GAAGvB,IAAI,CAACU,EAAE,CAAC,CAAC;IAErBhB,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,eAAe,EAAE;MAC7CC,KAAK,EAAE,eAAe;MACtBgB,KAAK,EAAE,OAAO;MACdf,OAAO,EAAEc;IACb,CAAC,CAAC;IACF7B,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,eAAe,EAAE;MAC7CC,KAAK,EAAE,eAAe;MACtBgB,KAAK,EAAE,OAAO;MACdf,OAAO,EAAEc;IACb,CAAC,CAAC;IACF,IAAMZ,OAAO,GAAGhB,KAAK,eACjBL,KAAA,CAAAsB,aAAA,CAAAtB,KAAA,CAAAmC,QAAA,qBACInC,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MACVoB,SAAS,EAAC,eAAe;MACzBC,IAAI,EAAC,QAAQ;MACbC,MAAM,EAAEnB;IAAe,CAAC,CAAC,eAC7BN,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MACVoB,SAAS,EAAC,eAAe;MACzBC,IAAI,EAAC,QAAQ;MACbC,MAAM,EAAEnB;IAAe,CAAC,CAC9B,CACN,CAAC;IACDe,OAAO,CAACU,IAAI,CAAC,QAAQ,CAAC,CAACK,OAAO,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACL,QAAQ,CAAC,OAAO,CAAC;IAAA,EAAC;IACxDN,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IACrCJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACM,KAAK,CAAC,CAACJ,IAAI,CAAC,OAAO,CAAC;IAChDJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACM,KAAK,CAAC,CAACJ,IAAI,CAAC,OAAO,CAAC;EACpD,CAAC,CAAC;EAEFf,EAAE,CAAC,4CAA4C,EAAE,YAAM;IACnD,IAAMkB,GAAG,GAAGvB,IAAI,CAACU,EAAE,CAAC,CAAC;IAErBhB,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,eAAe,EAAE;MAC7CC,KAAK,EAAE,eAAe;MACtBC,OAAO,EAAEc;IACb,CAAC,CAAC;IACF,IAAMZ,OAAO,GAAGhB,KAAK,eACjBL,KAAA,CAAAsB,aAAA,CAAAtB,KAAA,CAAAmC,QAAA,qBACInC,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MACVoB,SAAS,EAAC,eAAe;MACzBC,IAAI,EAAC,QAAQ;MACbC,MAAM,EAAEnB;IAAe,CAAC,CAAC,eAC7BN,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MACVoB,SAAS,EAAC,eAAe;MACzBC,IAAI,EAAC,QAAQ;MACbC,MAAM,EAAEnB;IAAe,CAAC,CAC9B,CACN,CAAC;IACDe,OAAO,CAACU,IAAI,CAAC,QAAQ,CAAC,CAACK,OAAO,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACL,QAAQ,CAAC,OAAO,CAAC;IAAA,EAAC;IACxDN,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IACrCJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,CAACM,IAAI,CAAC,QAAQ,CAAC;IAChDJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,CAACM,IAAI,CAAC,QAAQ,CAAC;EACpD,CAAC,CAAC;EAEFf,EAAE,CAAC,UAAU,EAAE,YAAM;IACjBX,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,eAAe,EAAE;MAC7CC,KAAK,EAAE,eAAe;MACtBC,OAAO,EAAET,IAAI,CAACU,EAAE,CAAC;IACrB,CAAC,CAAC;IAEF,IAAMC,OAAO,GAAGhB,KAAK,eACjBL,KAAA,CAAAsB,aAAA,CAAAtB,KAAA,CAAAmC,QAAA,qBACInC,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MACVoB,SAAS,EAAC,eAAe;MACzBC,IAAI,EAAC,OAAO;MACZC,MAAM,EAAEnB;IAAe,CAAC,CAAC,eAC7BN,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MACVoB,SAAS,EAAC,eAAe;MACzBC,IAAI,EAAC,OAAO;MACZC,MAAM,EAAElB;IAAa,CAAC,CAC5B,CACN,CAAC;IAEDmB,MAAM,CAACL,OAAO,CAACU,IAAI,CAAC,QAAQ,CAAC,CAACF,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAC7CJ,MAAM,CAACL,OAAO,CAACU,IAAI,CAAC,MAAM,CAAC,CAACF,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAC/C,CAAC,CAAC;EAEFf,EAAE,CAAC,sCAAsC,EAAE,YAAM;IAC7C,IAAMkB,GAAG,GAAGvB,IAAI,CAACU,EAAE,CAAC,CAAC;IACrB,IAAMkB,GAAG,GAAG5B,IAAI,CAACU,EAAE,CAAC,CAAC;IAErB,IAAMmB,IAAI,GAAGnC,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE;MACjDE,OAAO,EAAEc,GAAG;MACZO,YAAY,EAAE,CAAC,QAAQ;IAC3B,CAAC,CAAC;IACFpC,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,WAAW,EAAEsB,IAAI,EAAE;MAC/CE,KAAK,EAAE,GAAG;MACVvB,KAAK,EAAE,WAAW;MAClBsB,YAAY,EAAE,CAAC,QAAQ;IAC3B,CAAC,CAAC;IACFpC,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,WAAW,EAAEsB,IAAI,EAAE;MAC/CE,KAAK,EAAE,GAAG;MACVvB,KAAK,EAAE,WAAW;MAClBC,OAAO,EAAEmB;IACb,CAAC,CAAC;IAEF,IAAMjB,OAAO,GAAGhB,KAAK,eACjBL,KAAA,CAAAsB,aAAA,CAAAtB,KAAA,CAAAmC,QAAA,qBACInC,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MACVoB,SAAS,EAAC,WAAW;MACrBC,IAAI,EAAC,QAAQ;MACbC,MAAM,EAAEnB;IAAe,CAAC,CAAC,eAC7BN,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MACVoB,SAAS,EAAC,WAAW;MACrBC,IAAI,EAAC,QAAQ;MACbC,MAAM,EAAEnB;IAAe,CAAC,CAC9B,CACN,CAAC;IAEDe,OAAO,CAACU,IAAI,CAAC,QAAQ,CAAC,CAACK,OAAO,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACL,QAAQ,CAAC,OAAO,CAAC;IAAA,EAAC;IAExDN,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IACrCJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACa,KAAK,CAAC,CAACX,IAAI,CAAC,GAAG,CAAC;IAE5CJ,MAAM,CAACY,GAAG,CAACX,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IACrCJ,MAAM,CAACY,GAAG,CAACX,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACa,KAAK,CAAC,CAACX,IAAI,CAAC,GAAG,CAAC;IAC5CJ,MAAM,CAACY,GAAG,CAACX,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI,CAACG,GAAG,CAAC;EAC1C,CAAC,CAAC;EAEFlB,EAAE,CAAC,gCAAgC,EAAE,YAAM;IACvC,IAAMkB,GAAG,GAAGvB,IAAI,CAACU,EAAE,CAAC,CAAC;IACrB,IAAMsB,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA;MAAA,IAAaC,MAAM,GAAAD,IAAA,CAAdlB,MAAM;QAAaoB,KAAK,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;MAAA,oBAC7C/C,KAAA,CAAAsB,aAAA,CAACsB,MAAM,EAAAI,QAAA,KAAKH,KAAK;QAAE1B,OAAO,EAAEc;MAAI,EAAC,CAAC;IAAA,CACrC;IAEDS,cAAc,CAACO,SAAS,GAAG;MACvBxB,MAAM,EAAEjB,SAAS,CAAC0C,IAAI,CAACC;IAC3B,CAAC;IAED/C,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,aAAa,EAAE;MAC3CC,KAAK,EAAE,aAAa;MACpBkC,SAAS,EAAEV;IACf,CAAC,CAAC;IACF,IAAMrB,OAAO,GAAGhB,KAAK,eACjBL,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MAACoB,SAAS,EAAC,aAAa;MAACC,IAAI,EAAC,QAAQ;MAACC,MAAM,EAAEnB;IAAe,CAAC,CACjF,CAAC;IAEDe,OAAO,CAACU,IAAI,CAAC,QAAQ,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC;IACxCN,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IACrCJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,CAACM,IAAI,CAAC,QAAQ,CAAC;EACpD,CAAC,CAAC;EAEFf,EAAE,CAAC,8BAA8B,EAAE,YAAM;IACrC,IAAMkB,GAAG,GAAGvB,IAAI,CAACU,EAAE,CAAC,CAAC;IAErB,IAAMsB,cAAc,GAAG,SAAjBA,cAAcA,CAAAW,KAAA;MAAA,IAAaT,MAAM,GAAAS,KAAA,CAAd5B,MAAM;QAAaoB,KAAK,GAAAC,wBAAA,CAAAO,KAAA,EAAAC,UAAA;MAAA,oBAC7CtD,KAAA,CAAAsB,aAAA,CAACsB,MAAM,EAAAI,QAAA,KAAKH,KAAK;QAAE1B,OAAO,EAAEc;MAAI,EAAC,CAAC;IAAA,CACrC;IAEDS,cAAc,CAACO,SAAS,GAAG;MACvBxB,MAAM,EAAEjB,SAAS,CAAC0C,IAAI,CAACC;IAC3B,CAAC;IAED,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,KAAA,EAA+BC,YAAY,EAAEC,QAAQ;MAAA,IAAhDjC,MAAM,GAAA+B,KAAA,CAAN/B,MAAM;QAAEP,KAAK,GAAAsC,KAAA,CAALtC,KAAK;QAAK2B,KAAK,GAAAC,wBAAA,CAAAU,KAAA,EAAAG,UAAA;MAAA,oBAC5C3D,KAAA,CAAAsB,aAAA,CAACoC,QAAQ,EAAAV,QAAA;QAACY,QAAQ;QAACnC,MAAM,EAAEA,MAAO;QAACP,KAAK,EAAEA,KAAK,GAAG;MAAa,GAAK2B,KAAK,CAAE,CAAC;IAAA,CAC/E;IAEDU,cAAc,CAACN,SAAS,GAAG;MACvB/B,KAAK,EAAEV,SAAS,CAACqD,MAAM,CAACV,UAAU;MAClC1B,MAAM,EAAEjB,SAAS,CAAC0C,IAAI,CAACC;IAC3B,CAAC;IAED,IAAMZ,IAAI,GAAGnC,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE;MACjDmC,SAAS,EAAEV;IACf,CAAC,CAAC;IACFtC,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,qBAAqB,EAAEsB,IAAI,EAAE;MACzDE,KAAK,EAAE,GAAG;MACVvB,KAAK,EAAE;IACX,CAAC,CAAC;IACFd,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,qBAAqB,EAAEsB,IAAI,EAAE;MACzDE,KAAK,EAAE,GAAG;MACVvB,KAAK,EAAE,WAAW;MAClBkC,SAAS,EAAEG;IACf,CAAC,CAAC;IACF,IAAMlC,OAAO,GAAGhB,KAAK,eACjBL,KAAA,CAAAsB,aAAA,CAAAtB,KAAA,CAAAmC,QAAA,qBACInC,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MAACoB,SAAS,EAAC,qBAAqB;MAACC,IAAI,EAAC,QAAQ;MAACC,MAAM,EAAEnB;IAAe,CAAC,CAAC,eACtFN,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MAACoB,SAAS,EAAC,qBAAqB;MAACC,IAAI,EAAC,QAAQ;MAACC,MAAM,EAAEnB;IAAe,CAAC,CACvF,CACN,CAAC;IAEDe,OAAO,CAACU,IAAI,CAAC,QAAQ,CAAC,CAACK,OAAO,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACL,QAAQ,CAAC,OAAO,CAAC;IAAA,EAAC;IACxDN,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IACrCJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,CAACM,IAAI,CAAC,QAAQ,CAAC;IAChDJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACa,KAAK,CAAC,CAACX,IAAI,CAAC,GAAG,CAAC;IAC5CJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,CAACM,IAAI,CAAC,QAAQ,CAAC;IAChDJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACa,KAAK,CAAC,CAACX,IAAI,CAAC,GAAG,CAAC;IAC5CJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACgC,QAAQ,CAAC,CAAC9B,IAAI,CAAC,IAAI,CAAC;EACpD,CAAC,CAAC;EAEFf,EAAE,CAAC,yDAAyD,EAAE,YAAM;IAChE,IAAMkB,GAAG,GAAGvB,IAAI,CAACU,EAAE,CAAC,CAAC;IAErB,IAAM0C,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,KAAA,EAA0C;MAAA,IAA7BnB,MAAM,GAAAmB,KAAA,CAAdtC,MAAM;QAAUP,KAAK,GAAA6C,KAAA,CAAL7C,KAAK;QAAK2B,KAAK,GAAAC,wBAAA,CAAAiB,KAAA,EAAAC,UAAA;MACpD,IAAAC,SAAA,GAA0B/D,QAAQ,CAAC,CAAC,CAAC;QAAAgE,UAAA,GAAAC,cAAA,CAAAF,SAAA;QAA9B/B,KAAK,GAAAgC,UAAA;QAAEE,QAAQ,GAAAF,UAAA;MACtBjE,SAAS,CAAC,YAAM;QACZ,IAAMoE,CAAC,GAAGC,WAAW,CAAC,YAAM;UACxB7D,GAAG,CAAC;YAAA,OAAM2D,QAAQ,CAAClC,KAAK,GAAG,CAAC,CAAC;UAAA,EAAC;QAClC,CAAC,EAAE,IAAI,CAAC;QACR,OAAO,YAAM;UACTqC,aAAa,CAACF,CAAC,CAAC;QACpB,CAAC;MACL,CAAC,CAAC;MACF,OAAQnC,KAAK,GAAG,CAAC,gBACblC,KAAA,CAAAsB,aAAA,CAACsB,MAAM,EAAAI,QAAA;QACH9B,KAAK,EAAEA,KAAK,GAAGgB,KAAM;QACrBA,KAAK,EAAEA;MAAM,GACTW,KAAK;QACT1B,OAAO,EAAEc;MAAI,EAAC,CAAC,gBAEnBjC,KAAA,CAAAsB,aAAA,eAAM,WAAe,CACxB;IACL,CAAC;IAEDwC,cAAc,CAACb,SAAS,GAAG;MACvB/B,KAAK,EAAEV,SAAS,CAACqD,MAAM,CAACV,UAAU;MAClC1B,MAAM,EAAEjB,SAAS,CAAC0C,IAAI,CAACC;IAC3B,CAAC;IAED/C,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE;MACrCC,KAAK,EAAE,OAAO;MACdkC,SAAS,EAAEU;IACf,CAAC,CAAC;IAEF,IAAMzC,OAAO,GAAGhB,KAAK,eACjBL,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MAACoB,SAAS,EAAC,OAAO;MAACC,IAAI,EAAC,QAAQ;MAACC,MAAM,EAAEnB;IAAe,CAAC,CAC3E,CAAC;IACDoB,MAAM,CAAC4C,WAAW,CAAC,CAACE,qBAAqB,CAAC,CAAC,CAAC;IAC5C9C,MAAM,CAACL,OAAO,CAACU,IAAI,CAAC,QAAQ,CAAC,CAACF,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAE7CpB,IAAI,CAAC+D,mBAAmB,CAAC,IAAI,CAAC;IAC9BpD,OAAO,CAACqD,MAAM,CAAC,CAAC;IAChBhD,MAAM,CAACL,OAAO,CAACU,IAAI,CAAC,QAAQ,CAAC,CAACF,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAC7CT,OAAO,CAACU,IAAI,CAAC,QAAQ,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC;IACxCN,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IACrCJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACM,KAAK,CAAC,CAACJ,IAAI,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC;EAEFf,EAAE,CAAC,0CAA0C,EAAE,YAAM;IACjD,IAAMkB,GAAG,GAAGvB,IAAI,CAACU,EAAE,CAAC,CAAC;IACrB,IAAMuD,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,KAAA;MAAA,IAAahC,MAAM,GAAAgC,KAAA,CAAdnD,MAAM;QAAUoD,KAAK,GAAAD,KAAA,CAALC,KAAK;QAAE3D,KAAK,GAAA0D,KAAA,CAAL1D,KAAK;QAAK2B,KAAK,GAAAC,wBAAA,CAAA8B,KAAA,EAAAE,UAAA;MAAA,OAAMD,KAAK,CAACE,GAAG,CAAC,UAAAC,IAAI;QAAA,oBACtFhF,KAAA,CAAAsB,aAAA,CAACsB,MAAM,EAAAI,QAAA;UACHiC,GAAG,EAAED,IAAK;UACVA,IAAI,EAAEA,IAAK;UACX9D,KAAK,EAAEA,KAAK,GAAG,GAAG,GAAG8D;QAAK,GACtBnC,KAAK;UACT1B,OAAO,EAAEc;QAAI,EAAC,CAAC;MAAA,CACtB,CAAC;IAAA;IAEF0C,qBAAqB,CAAC1B,SAAS,GAAG;MAC9B/B,KAAK,EAAEV,SAAS,CAACqD,MAAM,CAACV,UAAU;MAClC0B,KAAK,EAAErE,SAAS,CAAC0E,OAAO,CAAC1E,SAAS,CAACqD,MAAM,CAAC,CAACV,UAAU;MACrD1B,MAAM,EAAEjB,SAAS,CAAC0C,IAAI,CAACC;IAC3B,CAAC;IAED/C,QAAQ,CAACa,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE;MACrCC,KAAK,EAAE,cAAc;MACrB2D,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;MACrCzB,SAAS,EAAEuB;IACf,CAAC,CAAC;IAEF,IAAMtD,OAAO,GAAGhB,KAAK,eACjBL,KAAA,CAAAsB,aAAA,CAACnB,aAAa;MAACoB,SAAS,EAAC,OAAO;MAACC,IAAI,EAAC,QAAQ;MAACC,MAAM,EAAEnB;IAAe,CAAC,CAC3E,CAAC;IAEDe,OAAO,CAACU,IAAI,CAAC,QAAQ,CAAC,CAACK,OAAO,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACL,QAAQ,CAAC,OAAO,CAAC;IAAA,EAAC;IACxDN,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IACrCJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,CAACM,IAAI,CAAC,QAAQ,CAAC;IAChDJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACoD,IAAI,CAAC,CAAClD,IAAI,CAAC,QAAQ,CAAC;IAChDJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACoD,IAAI,CAAC,CAAClD,IAAI,CAAC,QAAQ,CAAC;IAChDJ,MAAM,CAACO,GAAG,CAACN,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACoD,IAAI,CAAC,CAAClD,IAAI,CAAC,QAAQ,CAAC;EACpD,CAAC,CAAC;AACN,CAAC,CAAC"}