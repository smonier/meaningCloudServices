{"version":3,"names":["_react","require","_registry","_IframeRenderer","_Tree","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","useAdminRouteTreeStructure","selected","result","useMemo","getAllRoutes","baseTarget","parent","undefined","registry","find","type","flatMap","route","concat","_toConsumableArray2","map","render","iframeUrl","getIframeRenderer","routes","createTree","omitFromTree","children","tree","Tree","allPermissions","requiredPermission","item","pos","self","indexOf","defaultOpenedItems","selectedItem","get","parentTarget","targets","t","id","startsWith","substr","exports"],"sources":["useAdminRoutesTreeStructure.ts"],"sourcesContent":["import {useMemo} from 'react';\nimport {registry} from '~/registry';\nimport {getIframeRenderer} from '~/IframeRenderer';\nimport {Tree, TreeData} from './Tree';\nimport {StoredService} from '~/registry/service';\n\nexport const useAdminRouteTreeStructure = function (target: string, selected: string) {\n    const result = useMemo(() => {\n        const getAllRoutes = (baseTarget: string, parent = ''): StoredService[] => registry.find({\n            type: 'adminRoute',\n            target: baseTarget + parent\n        })\n            .flatMap(route => [route, ...getAllRoutes(baseTarget, '-' + route.key)])\n            .map(route => ({\n                ...route,\n                render: route.render || (typeof route.iframeUrl === 'string' && (() => getIframeRenderer(route.iframeUrl as string)))\n            }));\n\n        const routes = getAllRoutes(target);\n\n        const createTree = (baseTarget: string, parent = ''): TreeData[] => registry.find({type: 'adminRoute', target: baseTarget + parent})\n            .filter(route => !route.omitFromTree)\n            .map(route => ({\n                ...route,\n                children: createTree(baseTarget, '-' + route.key)\n            }));\n\n        const tree = new Tree(createTree(target));\n\n        const allPermissions = routes\n            .filter(route => route.requiredPermission)\n            .map(route => route.requiredPermission)\n            .filter((item, pos, self) => self.indexOf(item) === pos);\n\n        return {\n            routes, tree, allPermissions\n        };\n    }, [target]);\n\n    const {tree, routes, allPermissions} = result;\n    const defaultOpenedItems: string[] = [];\n\n    if (selected) {\n        let selectedItem = registry.get('adminRoute', selected);\n        while (selectedItem) {\n            const parentTarget = selectedItem.targets.find(t => t.id.startsWith(target + '-'));\n            if (parentTarget) {\n                const parent = parentTarget.id.substr(target.length + 1);\n                defaultOpenedItems.push(parent);\n                selectedItem = registry.get('adminRoute', parent);\n            } else {\n                selectedItem = null;\n            }\n        }\n    }\n\n    return {\n        tree,\n        defaultOpenedItems,\n        routes,\n        allPermissions\n    };\n};\n"],"mappings":"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"}