"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
var _react = _interopRequireWildcard(require("react"));
var _enzyme = require("enzyme");
var _ComponentRendererProvider = require("./ComponentRendererProvider");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _ComponentRendererContext = require("./ComponentRendererContext");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var RenderedComponent = function RenderedComponent(_ref) {
  var label = _ref.label;
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "component"
  }, label);
};
RenderedComponent.propTypes = {
  label: _propTypes["default"].string
};
var Render = function Render() {
  var renderer = (0, _react.useContext)(_ComponentRendererContext.ComponentRendererContext);
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement("button", {
    type: "button",
    className: "open",
    onClick: function onClick() {
      return renderer.render('test', RenderedComponent, {
        label: 'test'
      });
    }
  }, "Open"), /*#__PURE__*/_react["default"].createElement("button", {
    type: "button",
    className: "update",
    onClick: function onClick() {
      return renderer.setProperties('test', {
        label: 'updated'
      });
    }
  }, "Update"), /*#__PURE__*/_react["default"].createElement("button", {
    type: "button",
    className: "destroy",
    onClick: function onClick() {
      return renderer.destroy('test');
    }
  }, "Destroy"));
};
describe('ComponentRenderer', function () {
  it('should render the component', function () {
    var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_ComponentRendererProvider.ComponentRendererProvider, null, /*#__PURE__*/_react["default"].createElement(Render, null)));
    wrapper.find('.open').simulate('click');
    expect(wrapper.find(RenderedComponent).props()).toStrictEqual({
      label: 'test'
    });
    wrapper.find('.update').simulate('click');
    expect(wrapper.find(RenderedComponent).props()).toStrictEqual({
      label: 'updated'
    });
    wrapper.find('.destroy').simulate('click');
  });
  it('should update the properties', function () {
    var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_ComponentRendererProvider.ComponentRendererProvider, null, /*#__PURE__*/_react["default"].createElement(Render, null)));
    wrapper.find('.open').simulate('click');
    wrapper.find('.update').simulate('click');
    expect(wrapper.find(RenderedComponent).props()).toStrictEqual({
      label: 'updated'
    });
  });
  it('should delete the component', function () {
    var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_ComponentRendererProvider.ComponentRendererProvider, null, /*#__PURE__*/_react["default"].createElement(Render, null)));
    wrapper.find('.open').simulate('click');
    wrapper.find('.destroy').simulate('click');
  });
});
//# sourceMappingURL=ComponentRenderer.spec.js.map
