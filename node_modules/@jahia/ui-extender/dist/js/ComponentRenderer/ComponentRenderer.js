"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ComponentRenderer = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _ComponentRendererContext = require("./ComponentRendererContext");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ComponentRenderer = function ComponentRenderer() {
  var _useState = (0, _react.useState)({
      components: {},
      componentsProps: {}
    }),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    state = _useState2[0],
    setState = _useState2[1];
  var value = (0, _react.useContext)(_ComponentRendererContext.ComponentRendererContext);
  (0, _react.useEffect)(function () {
    value.render = function (key, component, props) {
      return setState(function (previous) {
        var newState = {
          components: _objectSpread({}, previous.components),
          componentsProps: _objectSpread({}, previous.componentsProps)
        };
        newState.components[key] = component;
        newState.componentsProps[key] = _objectSpread({}, props);
        return newState;
      });
    };
    value.setProperties = function (key, props) {
      return setState(function (previous) {
        if (previous.components[key]) {
          var newState = {
            components: _objectSpread({}, previous.components),
            componentsProps: _objectSpread({}, previous.componentsProps)
          };
          newState.componentsProps[key] = _objectSpread(_objectSpread({}, previous.componentsProps[key]), props);
          return newState;
        }
        return previous;
      });
    };
    value.destroy = function (key) {
      return setState(function (previous) {
        var newState = {
          components: _objectSpread({}, previous.components),
          componentsProps: _objectSpread({}, previous.componentsProps)
        };
        delete newState.components[key];
        delete newState.componentsProps[key];
        return newState;
      });
    };
  }, [value]);
  var components = Object.keys(state.components).map(function (key) {
    var component = state.components[key];
    return /*#__PURE__*/_react["default"].createElement(component, _objectSpread({
      key: key
    }, state.componentsProps[key]));
  });
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, components);
};
exports.ComponentRenderer = ComponentRenderer;
//# sourceMappingURL=ComponentRenderer.js.map
