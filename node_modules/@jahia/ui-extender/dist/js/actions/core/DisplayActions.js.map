{"version":3,"names":["_react","_interopRequireDefault","require","_propTypes","_registry","_DisplayAction","_excluded","DisplayActions","_ref","target","filter","others","_objectWithoutProperties2","actionsToDisplay","registry","find","type","createElement","Fragment","map","action","DisplayAction","_extends2","key","actionKey","exports","defaultProps","propTypes","context","object","PropTypes","string","isRequired","render","func","loading"],"sources":["DisplayActions.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {registry} from '~/registry';\nimport {DisplayAction} from './DisplayAction';\nimport {StoredService} from '~/registry/service';\n\nexport type DisplayActionsProps = {\n    /**\n     * The target from which the items will be selected\n     */\n    target: string,\n    /**\n     * The action context\n     */\n    context?: object,\n    /**\n     * The render component\n     */\n    render: React.FunctionComponent<object>,\n    /**\n     * The render component\n     */\n    loading?: React.FunctionComponent<object>,\n    /**\n     * Additional filter function\n     */\n    filter?: (value: StoredService) => boolean,\n\n    [key: string]: unknown\n}\n\nexport const DisplayActions = ({target, filter, ...others}: DisplayActionsProps) => {\n    let actionsToDisplay = registry.find({type: 'action', target});\n\n    if (filter) {\n        actionsToDisplay = actionsToDisplay && actionsToDisplay.filter(filter);\n    }\n\n    return <>{actionsToDisplay.map(action => <DisplayAction {...others} key={action.key} target={target} actionKey={action.key}/>)}</>;\n};\n\nDisplayActions.defaultProps = {\n    filter: null\n};\n\nDisplayActions.propTypes = {\n    /**\n     * The target from which the items will be selected\n     */\n    target: PropTypes.string.isRequired,\n\n    /**\n     * The render component\n     */\n    render: PropTypes.func.isRequired,\n\n    /**\n     * The loading component\n     */\n    loading: PropTypes.func,\n\n    /**\n     * Additional filter function\n     */\n    filter: PropTypes.func\n};\n"],"mappings":";;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AACA,IAAAG,cAAA,GAAAH,OAAA;AAA8C,IAAAI,SAAA;AA4BvC,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAyD;EAAA,IAApDC,MAAM,GAAAD,IAAA,CAANC,MAAM;IAAEC,MAAM,GAAAF,IAAA,CAANE,MAAM;IAAKC,MAAM,OAAAC,yBAAA,aAAAJ,IAAA,EAAAF,SAAA;EACrD,IAAIO,gBAAgB,GAAGC,kBAAQ,CAACC,IAAI,CAAC;IAACC,IAAI,EAAE,QAAQ;IAAEP,MAAM,EAANA;EAAM,CAAC,CAAC;EAE9D,IAAIC,MAAM,EAAE;IACRG,gBAAgB,GAAGA,gBAAgB,IAAIA,gBAAgB,CAACH,MAAM,CAACA,MAAM,CAAC;EAC1E;EAEA,oBAAOV,MAAA,YAAAiB,aAAA,CAAAjB,MAAA,YAAAkB,QAAA,QAAGL,gBAAgB,CAACM,GAAG,CAAC,UAAAC,MAAM;IAAA,oBAAIpB,MAAA,YAAAiB,aAAA,CAACZ,cAAA,CAAAgB,aAAa,MAAAC,SAAA,iBAAKX,MAAM;MAAEY,GAAG,EAAEH,MAAM,CAACG,GAAI;MAACd,MAAM,EAAEA,MAAO;MAACe,SAAS,EAAEJ,MAAM,CAACG;IAAI,EAAC,CAAC;EAAA,EAAI,CAAC;AACtI,CAAC;AAACE,OAAA,CAAAlB,cAAA,GAAAA,cAAA;AAEFA,cAAc,CAACmB,YAAY,GAAG;EAC1BhB,MAAM,EAAE;AACZ,CAAC;AAEDH,cAAc,CAACoB,SAAS,GAAG;EAAA;AAC3B;AACA;EAjCIC,OAAO,EAAAzB,UAAA,YAAA0B,MAAA;EAgCP;AACJ;AACA;EACIpB,MAAM,EAAEqB,qBAAS,CAACC,MAAM,CAACC,UAAU;EAEnC;AACJ;AACA;EACIC,MAAM,EAAEH,qBAAS,CAACI,IAAI,CAACF,UAAU;EAEjC;AACJ;AACA;EACIG,OAAO,EAAEL,qBAAS,CAACI,IAAI;EAEvB;AACJ;AACA;EACIxB,MAAM,EAAEoB,qBAAS,CAACI;AACtB,CAAC"}