"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DisplayAction = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
var _registry = require("../../registry");
var _excluded = ["context"],
  _excluded2 = ["context", "actionKey", "render", "loading"];
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var count = 0;
var getRenderWrapper = function getRenderWrapper(Render) {
  var RenderWrapper = function RenderWrapper(_ref) {
    var context = _ref.context,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
    return /*#__PURE__*/_react["default"].createElement(Render, (0, _extends2["default"])({}, context, otherProps));
  };
  return RenderWrapper;
};
var DisplayAction = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2["default"])(DisplayAction, _React$PureComponent);
  var _super = _createSuper(DisplayAction);
  function DisplayAction(props) {
    var _this;
    (0, _classCallCheck2["default"])(this, DisplayAction);
    _this = _super.call(this, props);
    _this.id = props.actionKey + '-' + count++;
    _this.RenderWrapper = getRenderWrapper(props.render);
    return _this;
  }
  (0, _createClass2["default"])(DisplayAction, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        context = _this$props.context,
        actionKey = _this$props.actionKey,
        render = _this$props.render,
        loading = _this$props.loading,
        otherProps = (0, _objectWithoutProperties2["default"])(_this$props, _excluded2);
      var action = _registry.registry.get('action', actionKey);
      if (!action) {
        return null;
      }
      if (context) {
        console.warn('Warn : context in DisplayAction is deprecated', actionKey, context);
      }
      var Component = typeof action.component === 'function' ? action.component : render;

      // Merge props and context. To remove when context is not supported anymore
      var mergedProps = _objectSpread(_objectSpread({}, context), otherProps);
      var componentProps = _objectSpread(_objectSpread(_objectSpread({}, action), mergedProps), {}, {
        originalContext: mergedProps,
        id: this.id,
        actionKey: actionKey
      });
      if (componentProps.init) {
        componentProps.init(componentProps, this.props);
      }
      var info = {};
      info['data-registry-key'] = action.type + ':' + action.key;
      if (otherProps.target && action.targets) {
        var foundTarget = action.targets.find(function (t) {
          return t.id === otherProps.target;
        });
        if (foundTarget) {
          info['data-registry-target'] = foundTarget.id + ':' + foundTarget.priority;
        }
      }

      // Props are passed as as context and props. Context can be removed when not supported anymore
      return /*#__PURE__*/_react["default"].createElement(Component, (0, _extends2["default"])({
        key: this.id
      }, componentProps, {
        buttonProps: _objectSpread(_objectSpread({}, componentProps.buttonProps), info),
        context: componentProps,
        render: this.RenderWrapper,
        loading: loading
      }));
    }
  }]);
  return DisplayAction;
}(_react["default"].PureComponent);
exports.DisplayAction = DisplayAction;
(0, _defineProperty2["default"])(DisplayAction, "propTypes", {
  /**
       * The key of the action to display
       */
  actionKey: _propTypes["default"].string.isRequired,
  /**
       * The action context
       */
  context: _propTypes["default"].object
});
//# sourceMappingURL=DisplayAction.js.map
