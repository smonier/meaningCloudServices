"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@storybook/react");
var _DisplayActions = require("./DisplayActions");
var _addonKnobs = require("@storybook/addon-knobs");
var _DisplayActions2 = _interopRequireDefault(require("./DisplayActions.md"));
var _ButtonRenderer = require("../samples/ButtonRenderer");
var _registry = require("../../registry");
(0, _react2.storiesOf)('actions|DisplayActions', module).addParameters({
  component: _DisplayActions.DisplayActions,
  notes: {
    markdown: _DisplayActions2["default"]
  }
}).addDecorator(_addonKnobs.withKnobs).add('default', function () {
  var base = {
    onClick: function onClick() {
      return window.alert('Action');
    } // eslint-disable-line no-alert
  };

  _registry.registry.addOrReplace('action', 'test-action-1', base, {
    targets: ['target-1:1'],
    label: 'test action 1 (filter false)'
  });
  _registry.registry.addOrReplace('action', 'test-action-2', base, {
    targets: ['target-1:2'],
    valueToFilter: true,
    label: 'test action 2 (filter true)'
  });
  _registry.registry.addOrReplace('action', 'test-action-3', base, {
    targets: ['target-1:3'],
    label: 'test action 3 (filter false)'
  });
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement("div", {
    className: "description"
  }, "Display all items that have the specified target"), /*#__PURE__*/_react["default"].createElement(_DisplayActions.DisplayActions, {
    target: "target-1",
    context: {
      path: '/test'
    },
    render: _ButtonRenderer.ButtonRenderer
  }));
}).add('Filtered target', function () {
  var base = {
    onClick: function onClick() {
      return window.alert('Action');
    } // eslint-disable-line no-alert
  };

  _registry.registry.addOrReplace('action', 'test-action-1', base, {
    targets: ['target-2:1'],
    label: 'test action 1 (filter false)'
  });
  _registry.registry.addOrReplace('action', 'test-action-2', base, {
    targets: ['target-2:2'],
    valueToFilter: true,
    label: 'test action 2 (filter true)'
  });
  _registry.registry.addOrReplace('action', 'test-action-3', base, {
    targets: ['target-2:3'],
    label: 'test action 3 (filter false)'
  });
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement("div", {
    className: "description"
  }, "The target items can be filtered by a filtering function"), /*#__PURE__*/_react["default"].createElement(_DisplayActions.DisplayActions, {
    target: "target-2",
    context: {
      path: '/test'
    },
    filter: function filter(context) {
      return context.valueToFilter;
    },
    render: _ButtonRenderer.ButtonRenderer
  }));
});
//# sourceMappingURL=DisplayActions.stories.js.map
