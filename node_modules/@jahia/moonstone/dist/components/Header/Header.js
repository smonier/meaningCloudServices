import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["title", "search", "mainActions", "status", "contentType", "toolbarRight", "toolbarLeft", "backButton", "breadcrumb", "className"];
import React from 'react';
import clsx from 'clsx';
import "./Header.css";
import { Separator, Typography } from "./..";
export var Header = function Header(_ref) {
  var title = _ref.title,
      _ref$search = _ref.search,
      search = _ref$search === void 0 ? null : _ref$search,
      mainActions = _ref.mainActions,
      status = _ref.status,
      contentType = _ref.contentType,
      toolbarRight = _ref.toolbarRight,
      toolbarLeft = _ref.toolbarLeft,
      _ref$backButton = _ref.backButton,
      backButton = _ref$backButton === void 0 ? null : _ref$backButton,
      breadcrumb = _ref.breadcrumb,
      className = _ref.className,
      props = _objectWithoutProperties(_ref, _excluded);

  var hasInformationArea = Boolean(breadcrumb || contentType || status);
  var hasToolbar = Boolean(toolbarLeft || toolbarRight);
  return /*#__PURE__*/React.createElement("header", _extends({
    className: clsx('moonstone-header', className)
  }, props), /*#__PURE__*/React.createElement("div", {
    className: clsx('moonstone-header_main', 'flexRow', 'alignCenter', 'flexFluid')
  }, backButton && /*#__PURE__*/React.createElement("div", {
    className: "moonstone-header_back"
  }, backButton), /*#__PURE__*/React.createElement(Typography, {
    isNowrap: true,
    component: "h1",
    variant: "title",
    className: clsx('flexFluid', 'moonstone-header_title')
  }, title), search && /*#__PURE__*/React.createElement("div", {
    className: clsx('moonstone-header_search')
  }, search), mainActions && /*#__PURE__*/React.createElement("div", {
    className: clsx('moonstone-header_mainActions', 'moonstone-header_actions')
  }, mainActions)), hasInformationArea && /*#__PURE__*/React.createElement("div", {
    className: clsx('flexRow_between', 'alignCenter', 'moonstone-header_information')
  }, /*#__PURE__*/React.createElement("div", {
    className: clsx('flexRow_nowrap', 'alignCenter', 'flexFluid', 'moonstone-header_informationLeft')
  }, breadcrumb, /*#__PURE__*/React.createElement(Separator, {
    variant: "vertical",
    spacing: "medium",
    invisible: "firstOrLastChild"
  }), contentType), status && /*#__PURE__*/React.createElement("div", {
    className: clsx('flexRow_reverse', 'alignCenter', 'moonstone-header_informationRight', 'moonstone-header_actions')
  }, status)), hasToolbar && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Separator, null), /*#__PURE__*/React.createElement("div", {
    role: "toolbar",
    className: clsx('flexRow_between', 'alignCenter', 'moonstone-header_toolbar')
  }, /*#__PURE__*/React.createElement("div", {
    className: clsx('flexRow', 'alignCenter', 'flexFluid', 'moonstone-header_actions')
  }, toolbarLeft), /*#__PURE__*/React.createElement("div", {
    className: clsx('flexRow', 'alignCenter', 'moonstone-header_actions')
  }, toolbarRight))));
};
Header.displayName = 'Header';
//# sourceMappingURL=Header.js.map
