{"version":3,"sources":["UncontrolledCheckbox.tsx"],"names":["React","useState","ControlledCheckbox","UncontrolledCheckbox","defaultChecked","props","checked","setChecked","event","target","displayName"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA;AAEA,SAAQC,kBAAR;AAEA,OAAO,IAAMC,oBAA6C,GAAG,SAAhDA,oBAAgD,OAAwC;AAAA,iCAAtCC,cAAsC;AAAA,MAAtCA,cAAsC,oCAArB,KAAqB;AAAA,MAAXC,KAAW;;AACjG,kBAA8BJ,QAAQ,CAACG,cAAD,CAAtC;AAAA;AAAA,MAAOE,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,sBACI,oBAAC,kBAAD,eAAwBF,KAAxB;AACoB,IAAA,OAAO,EAAEC,OAD7B;AAEoB,IAAA,QAAQ,EAAE,kBAAAE,KAAK,EAAI;AACfD,MAAAA,UAAU,CAACC,KAAK,CAACC,MAAN,CAAaH,OAAd,CAAV;AACH;AAJrB,KADJ;AAQH,CAXM;AAaPH,oBAAoB,CAACO,WAArB,GAAmC,sBAAnC","sourcesContent":["import React, {useState} from 'react';\nimport './Checkbox.scss';\nimport {CheckboxProps} from './Checkbox.types';\nimport {ControlledCheckbox} from '~/components/Checkbox/ControlledCheckbox';\n\nexport const UncontrolledCheckbox: React.FC<CheckboxProps> = ({defaultChecked = false, ...props}) => {\n    const [checked, setChecked] = useState(defaultChecked);\n\n    return (\n        <ControlledCheckbox {...props}\n                            checked={checked}\n                            onChange={event => {\n                                setChecked(event.target.checked);\n                            }}\n        />\n    );\n};\n\nUncontrolledCheckbox.displayName = 'UncontrolledCheckbox';\n"]}