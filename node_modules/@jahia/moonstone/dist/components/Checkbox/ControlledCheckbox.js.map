{"version":3,"sources":["ControlledCheckbox.tsx"],"names":["React","useRef","clsx","capitalize","ControlledCheckbox","className","checked","indeterminate","size","isDisabled","isReadOnly","props","inputRef","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,UAAR;AAEA;AAEA,OAAO,IAAMC,kBAA2C,GAAG,SAA9CA,kBAA8C,OAA6G;AAAA,MAA3GC,SAA2G,QAA3GA,SAA2G;AAAA,0BAAhGC,OAAgG;AAAA,MAAhGA,OAAgG,6BAAtF,KAAsF;AAAA,gCAA/EC,aAA+E;AAAA,MAA/EA,aAA+E,mCAA/D,KAA+D;AAAA,uBAAxDC,IAAwD;AAAA,MAAxDA,IAAwD,0BAAjD,SAAiD;AAAA,MAAtCC,UAAsC,QAAtCA,UAAsC;AAAA,MAA1BC,UAA0B,QAA1BA,UAA0B;AAAA,MAAXC,KAAW;;AACpK,MAAMC,QAAQ,GAAGX,MAAM,CAAmB,IAAnB,CAAvB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEC,IAAI,CAAC,oBAAD,EAAuBG,SAAvB;AAApB,kBACI,0CACQM,KADR;AAEI,IAAA,GAAG,EAAEC,QAFT;AAGI,IAAA,SAAS,EAAEV,IAAI,CAAC,0BAAD,mCAAuDC,UAAU,CAACK,IAAD,CAAjE,EAHnB;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,OAAO,EAAEF,OALb;AAMI,IAAA,QAAQ,EAAEG,UANd;AAOI,qBAAeC,UAPnB;AAQI,oBAAcH,aAAa,GAAG,OAAH,GAAaD;AAR5C,KADJ,eAWI;AAAK,IAAA,SAAS,EAAEJ,IAAI,CAAC,yBAAD,mCAAsDC,UAAU,CAACK,IAAD,CAAhE,EAApB;AAA+F,IAAA,OAAO,EAAC;AAAvG,KACMD,aAAa,gBACX;AAAM,IAAA,CAAC,EAAC,qBAAR;AAA8B,IAAA,aAAa,EAAC;AAA5C,IADW,gBAEX;AAAM,IAAA,CAAC,EAAC,yBAAR;AAAkC,IAAA,aAAa,EAAC;AAAhD,IAHR,CAXJ,CADJ;AAmBH,CAtBM;AAwBPH,kBAAkB,CAACS,WAAnB,GAAiC,oBAAjC","sourcesContent":["import React, {useRef} from 'react';\nimport clsx from 'clsx';\nimport {capitalize} from '~/utils/helpers';\nimport {CheckboxProps} from './Checkbox.types';\nimport './Checkbox.scss';\n\nexport const ControlledCheckbox: React.FC<CheckboxProps> = ({className, checked = false, indeterminate = false, size = 'default', isDisabled, isReadOnly, ...props}) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    return (\n        <div className={clsx('moonstone-checkbox', className)}>\n            <input\n                {...props}\n                ref={inputRef}\n                className={clsx('moonstone-checkbox_input', `moonstone-checkbox_size${capitalize(size)}`)}\n                type=\"checkbox\"\n                checked={checked}\n                disabled={isDisabled}\n                aria-readonly={isReadOnly}\n                aria-checked={indeterminate ? 'mixed' : checked}\n            />\n            <svg className={clsx('moonstone-checkbox_icon', `moonstone-checkbox_size${capitalize(size)}`)} viewBox=\"0 0 21 21\">\n                { indeterminate ?\n                    <path d=\"M4.5 10.5L16.5 10.5\" strokeLinecap=\"round\"/> :\n                    <path d=\"M5 10.75L8.5 14.25L16 6\" strokeLinecap=\"round\"/>}\n            </svg>\n        </div>\n    );\n};\n\nControlledCheckbox.displayName = 'ControlledCheckbox';\n"]}