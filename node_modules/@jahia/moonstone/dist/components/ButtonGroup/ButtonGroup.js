import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["size", "isReversed", "variant", "color", "className", "children"];
import React from 'react';
import "./ButtonGroup.css";
import clsx from 'clsx';
export var ButtonGroup = function ButtonGroup(_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'default' : _ref$size,
      _ref$isReversed = _ref.isReversed,
      isReversed = _ref$isReversed === void 0 ? false : _ref$isReversed,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'default' : _ref$variant,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'default' : _ref$color,
      _ref$className = _ref.className,
      className = _ref$className === void 0 ? null : _ref$className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded);

  if (!children || React.Children.count(children) < 1) {
    return null;
  }

  return /*#__PURE__*/React.createElement("div", _extends({
    role: "group",
    className: clsx('moonstone-buttonGroup', className, 'flexRow', 'alignCenter')
  }, props), React.Children.map(children, function (button) {
    if (! /*#__PURE__*/React.isValidElement(button)) {
      return null;
    }

    return /*#__PURE__*/React.createElement(button.type, _extends({}, button.props, {
      size: size,
      variant: variant,
      isReversed: isReversed,
      color: color,
      className: clsx("moonstone-variant_".concat(variant), "moonstone-color_".concat(color))
    }));
  }));
};
ButtonGroup.displayName = 'ButtonGroup';
//# sourceMappingURL=ButtonGroup.js.map
