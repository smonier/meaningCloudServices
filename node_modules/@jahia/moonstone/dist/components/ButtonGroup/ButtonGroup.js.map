{"version":3,"sources":["ButtonGroup.tsx"],"names":["React","clsx","ButtonGroup","size","isReversed","variant","color","className","children","props","Children","count","map","button","isValidElement","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,OAAO,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAQjD;AAAA,uBAPFC,IAOE;AAAA,MAPFA,IAOE,0BAPK,SAOL;AAAA,6BANFC,UAME;AAAA,MANFA,UAME,gCANW,KAMX;AAAA,0BALFC,OAKE;AAAA,MALFA,OAKE,6BALQ,SAKR;AAAA,wBAJFC,KAIE;AAAA,MAJFA,KAIE,2BAJM,SAIN;AAAA,4BAHFC,SAGE;AAAA,MAHFA,SAGE,+BAHU,IAGV;AAAA,MAFFC,QAEE,QAFFA,QAEE;AAAA,MADCC,KACD;;AACF,MAAI,CAACD,QAAD,IAAaR,KAAK,CAACU,QAAN,CAAeC,KAAf,CAAqBH,QAArB,IAAiC,CAAlD,EAAqD;AACjD,WAAO,IAAP;AACH;;AAED,sBACI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,SAAS,EAAEP,IAAI,CACX,uBADW,EAEXM,SAFW,EAGX,SAHW,EAIX,aAJW;AAFnB,KAQQE,KARR,GAWQT,KAAK,CAACU,QAAN,CAAeE,GAAf,CAAmBJ,QAAnB,EAA6B,UAAAK,MAAM,EAAI;AACnC,QAAI,eAACb,KAAK,CAACc,cAAN,CAAqBD,MAArB,CAAL,EAAmC;AAC/B,aAAO,IAAP;AACH;;AAED,wBACI,oBAAC,MAAD,CAAQ,IAAR,eACQA,MAAM,CAACJ,KADf;AAEI,MAAA,IAAI,EAAEN,IAFV;AAGI,MAAA,OAAO,EAAEE,OAHb;AAII,MAAA,UAAU,EAAED,UAJhB;AAKI,MAAA,KAAK,EAAEE,KALX;AAMI,MAAA,SAAS,EAAEL,IAAI,6BACUI,OADV,6BAEQC,KAFR;AANnB,OADJ;AAaH,GAlBD,CAXR,CADJ;AAkCH,CA/CM;AAiDPJ,WAAW,CAACa,WAAZ,GAA0B,aAA1B","sourcesContent":["import React from 'react';\nimport './ButtonGroup.scss';\nimport clsx from 'clsx';\nimport {ButtonGroupProps} from './ButtonGroup.types';\n\nexport const ButtonGroup: React.FC<ButtonGroupProps> = ({\n    size = 'default',\n    isReversed = false,\n    variant = 'default',\n    color = 'default',\n    className = null,\n    children,\n    ...props\n}) => {\n    if (!children || React.Children.count(children) < 1) {\n        return null;\n    }\n\n    return (\n        <div\n            role=\"group\"\n            className={clsx(\n                'moonstone-buttonGroup',\n                className,\n                'flexRow',\n                'alignCenter'\n            )}\n            {...props}\n        >\n            {\n                React.Children.map(children, button => {\n                    if (!React.isValidElement(button)) {\n                        return null;\n                    }\n\n                    return (\n                        <button.type\n                            {...button.props}\n                            size={size}\n                            variant={variant}\n                            isReversed={isReversed}\n                            color={color}\n                            className={clsx(\n                                `moonstone-variant_${variant}`,\n                                `moonstone-color_${color}`\n                            )}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n"]}