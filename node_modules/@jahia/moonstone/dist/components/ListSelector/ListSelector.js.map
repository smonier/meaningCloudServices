{"version":3,"sources":["ListSelector.tsx"],"names":["React","useState","ValueList","Button","Typography","ChevronDoubleLeft","ChevronDoubleRight","ChevronRight","Close","clsx","MLRS_DRAG","ListSelector","label","addAllTitle","removeAllTitle","selected","options","values","isReadOnly","onChange","props","dragged","setDragged","filterLeft","setFilterLeft","filterRight","setFilterRight","valuesLeft","filter","o","includes","value","v","toLowerCase","indexOf","valuesRight","map","find","originalIndex","splice","index","tempItem","e","concat","stopPropagation","ct","currentTarget","setTimeout","parentNode","style","opacity","dataTransfer","setData","JSON","stringify","type","effectAllowed","setDragImage","from","types","preventDefault","dropEffect","val","length","rect","getBoundingClientRect","clientOffset","x","clientX","y","clientY","targetMidPointY","height","newIndex","f","state","displayName"],"mappings":"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","sourcesContent":["/* Disabled lint due to incompatibility of Button with regular props, work on this is in progress */\n/* eslint-disable-next-line @typescript-eslint/ban-ts-comment */\n// @ts-nocheck\n\nimport React, {useState} from 'react';\nimport {ValueList} from './ValueList';\nimport {Button, Typography} from '~/components';\nimport {ChevronDoubleLeft, ChevronDoubleRight, ChevronRight, Close} from '~/icons';\nimport type {ListSelectorSelectorProps} from './ListSelector.types';\nimport './ListSelector.scss';\nimport clsx from 'clsx';\n\nconst MLRS_DRAG = 'mlrs_drag_list_item';\n\nexport const ListSelector: React.FC<ListSelectorSelectorProps> = ({\n    label = {\n        addAllTitle: 'Add all',\n        removeAllTitle: 'Remove all',\n        selected: '0 items selected'\n    },\n    options = [],\n    values = [],\n    isReadOnly,\n    onChange,\n    ...props\n}) => {\n    const [dragged, setDragged] = useState(null);\n    // This tracks drag operation without delay and prevents NPE, if we ever experience issues with this, 'dragged' will need to live in this ref\n    // like it did before, but so far state updates are pretty fast and I did not see any issues.\n    const [filterLeft, setFilterLeft] = useState(null);\n    const [filterRight, setFilterRight] = useState(null);\n\n    const valuesLeft = options\n        .filter(o => !values.includes(o.value))\n        .filter(v => ((!filterLeft || filterLeft === '') || v.label.toLowerCase().indexOf(filterLeft.toLowerCase()) !== -1));\n    const valuesRight = values\n        .map(v => options.find(o => o.value === v))\n        .filter(v => ((!filterRight || filterRight === '') || v.label.toLowerCase().indexOf(filterRight.toLowerCase()) !== -1));\n\n    if (typeof dragged?.originalIndex === 'number') {\n        valuesRight.splice(dragged.originalIndex, 1);\n    }\n\n    // Add left side item to right side without triggering on change so its space is kept in the left list but can also exist in right list\n    if (typeof dragged?.index === 'number') {\n        valuesRight.splice(dragged.index, 0, {...dragged.value, tempItem: typeof dragged.originalIndex !== 'number'});\n    }\n\n    return (\n        <div className={clsx('flexRow_nowrap', 'moonstone-multipleSelector')} {...props}>\n            <div>\n                <ValueList values={valuesLeft}\n                           role=\"left-list\"\n                           iconEnd={<ChevronRight className=\"moonstone-displayNone\"/>}\n                           isReadOnly={isReadOnly}\n                           filter={filterLeft}\n                           setFilter={setFilterLeft}\n                           listClasses={typeof dragged?.originalIndex === 'number' ? ['moonstone-draggedOver'] : []}\n                           draggedId={dragged?.value.value}\n                           onClick={(e, value) => {\n                               onChange(values.concat(value.value));\n                           }}\n                           onDragStart={(e, value) => {\n                               e.stopPropagation();\n                               const ct = e.currentTarget;\n                               setTimeout(() => {\n                                   ct.parentNode.parentNode.style.opacity = '0';\n                               }, 10);\n                               e.dataTransfer.setData(MLRS_DRAG, JSON.stringify({type: MLRS_DRAG, value: value}));\n                               e.dataTransfer.effectAllowed = 'move';\n                               e.dataTransfer.setDragImage(e.currentTarget.parentNode.parentNode as Element, 10, 10);\n                               setDragged({value, from: 'left'});\n                           }}\n                           onDragEnd={e => {\n                               e.stopPropagation();\n                               e.currentTarget.parentNode.parentNode.style.opacity = '1';\n                               setDragged(null);\n                           }}\n                           onDragOver={e => {\n                               e.stopPropagation();\n                               if (e.dataTransfer.types.includes(MLRS_DRAG)) {\n                                   e.preventDefault();\n                                   e.dataTransfer.dropEffect = 'move';\n                               }\n                           }}\n                           onDrop={e => {\n                               e.stopPropagation();\n                               if (e.dataTransfer.types.includes(MLRS_DRAG)) {\n                                   onChange(values.filter(val => val !== dragged.value.value));\n                                   setDragged(null);\n                               }\n                           }}\n\n                />\n            </div>\n            <div className=\"moonstone-buttonSection\">\n                <div className=\"moonstone-buttons\">\n                    <Button title={label.addAllTitle}\n                            role=\"add-all\"\n                            variant=\"ghost\"\n                            isDisabled={isReadOnly || valuesLeft.length === 0}\n                            icon={<ChevronDoubleRight/>}\n                            onClick={() => onChange([...valuesRight, ...valuesLeft].map(o => o.value))}\n                    />\n                    <Button title={label.removeAllTitle}\n                            role=\"remove-all\"\n                            variant=\"ghost\"\n                            isDisabled={isReadOnly || valuesRight.length === 0}\n                            icon={<ChevronDoubleLeft/>}\n                            onClick={() => onChange(values.filter(v => !valuesRight.find(o => o.value === v)))}\n                    />\n                </div>\n            </div>\n            <div>\n                <ValueList values={valuesRight}\n                           role=\"right-list\"\n                           iconEnd={<Close className=\"moonstone-displayNone\"/>}\n                           isReadOnly={isReadOnly}\n                           label={label}\n                           filter={filterRight}\n                           setFilter={setFilterRight}\n                           listClasses={(dragged && !filterRight) ? ['moonstone-draggedOver'] : []}\n                           draggedId={dragged?.value.value}\n                           onClick={(e, value) => {\n                               onChange(values.filter(val => val !== value.value));\n                           }}\n                           onDragStart={(e, value) => {\n                               e.stopPropagation();\n                               const ct = e.currentTarget;\n                               setTimeout(() => {\n                                   ct.parentNode.parentNode.style.opacity = '0';\n                               }, 10);\n                               e.dataTransfer.setData(MLRS_DRAG, JSON.stringify({type: MLRS_DRAG, value: value}));\n                               e.dataTransfer.effectAllowed = 'move';\n                               e.dataTransfer.setDragImage(e.currentTarget.parentNode.parentNode as Element, 10, 10);\n                               setDragged({value, originalIndex: valuesRight.indexOf(value), index: valuesRight.indexOf(value), from: 'right'});\n                           }}\n                           onDragEnd={e => {\n                               e.stopPropagation();\n                               e.currentTarget.parentNode.parentNode.style.opacity = '1';\n                               setDragged(null);\n                           }}\n                           onDragOver={e => {\n                               e.stopPropagation();\n                               // Perform move of the item within the list\n                               if (e.dataTransfer.types.includes(MLRS_DRAG) && !filterRight) {\n                                   e.preventDefault();\n                                   e.dataTransfer.dropEffect = 'move';\n                                   const rect = e.currentTarget.getBoundingClientRect();\n                                   const clientOffset = {x: e.clientX, y: e.clientY};\n                                   const targetMidPointY = rect.y + (rect.height / 2);\n                                   let newIndex = -1;\n                                   if (value && dragged.value.value !== value.value) {\n                                       if (clientOffset.y < targetMidPointY) {\n                                           newIndex = valuesRight.filter(f => f.value !== dragged.value.value).indexOf(value);\n                                       }\n\n                                       // Avoid triggering change for adjacent target\n                                       if (clientOffset.y > targetMidPointY) {\n                                           newIndex = valuesRight.filter(f => f.value !== dragged.value.value).indexOf(value) + 1;\n                                       }\n                                   } else if (!value) {\n                                       newIndex = valuesRight.length;\n                                   }\n\n                                   if (newIndex !== -1 && dragged.index !== newIndex) {\n                                       setDragged(state => ({\n                                           ...state,\n                                           index: newIndex\n                                       }));\n                                   }\n                               }\n                           }}\n                           onDrop={e => {\n                               // Confirms drop and prevents reordering onDragEnd\n                               e.stopPropagation();\n                               if (e.dataTransfer.types.includes(MLRS_DRAG)) {\n                                   onChange(valuesRight.map(v => v.value));\n                                   setDragged(null);\n                               }\n                           }}\n                />\n                <div className=\"moonstone-captionContainer\">\n                    <Typography variant=\"caption\" weight=\"semiBold\">\n                        {values.length > 0 && label.selected}\n                    </Typography>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nListSelector.displayName = 'ListSelector';\n"]}