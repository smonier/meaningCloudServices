import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["variant", "isHover", "isSelected", "isDisabled", "iconStart", "iconSize", "iconEnd", "image", "imageSize", "className", "description"];
import React from 'react';
import { ListItem } from "../ListItem";
import clsx from 'clsx';
import "./MenuItem.css";
import { MenuItemVariants } from "./MenuItem.types";
export var MenuItem = function MenuItem(_ref) {
  var _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? MenuItemVariants.Default : _ref$variant,
      isHover = _ref.isHover,
      isSelected = _ref.isSelected,
      _ref$isDisabled = _ref.isDisabled,
      isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,
      _ref$iconStart = _ref.iconStart,
      iconStart = _ref$iconStart === void 0 ? null : _ref$iconStart,
      _ref$iconSize = _ref.iconSize,
      iconSize = _ref$iconSize === void 0 ? null : _ref$iconSize,
      _ref$iconEnd = _ref.iconEnd,
      iconEnd = _ref$iconEnd === void 0 ? null : _ref$iconEnd,
      image = _ref.image,
      imageSize = _ref.imageSize,
      className = _ref.className,
      description = _ref.description,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(ListItem, _extends({
    tabIndex: isDisabled || variant === MenuItemVariants.Title || isSelected ? null : 0,
    "aria-disabled": isDisabled,
    className: clsx('moonstone-menuItem', {
      'moonstone-hover': isHover,
      'moonstone-selected': isSelected,
      'moonstone-disabled': isDisabled,
      'moonstone-title': variant === MenuItemVariants.Title
    }, image && 'moonstone-menuItem-image', className),
    image: image,
    imageSize: imageSize,
    iconSize: iconSize,
    iconStart: iconStart,
    iconEnd: iconEnd,
    description: description
  }, props));
};
MenuItem.displayName = 'MenuItem';
//# sourceMappingURL=MenuItem.js.map
