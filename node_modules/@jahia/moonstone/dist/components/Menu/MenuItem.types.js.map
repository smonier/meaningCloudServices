{"version":3,"sources":["MenuItem.types.ts"],"names":["MenuItemVariants"],"mappings":"AAGA,WAAYA,gBAAZ;;WAAYA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;GAAAA,gB,KAAAA,gB","sourcesContent":["import React from 'react';\n\ntype MenuItemVariant = 'default' | 'title';\nexport enum MenuItemVariants {\n    Default = 'default',\n    Title = 'title'\n}\n\ntype MenuItemImageSize = 'small' | 'big';\n\nexport type MenuItemProps = {\n    /**\n     * Additional classname\n     */\n    className?: string,\n\n    /**\n     * Is item being hovered\n     */\n    isHover?: boolean,\n\n    /**\n     * Is item selected\n     */\n    isSelected?: boolean,\n\n    /**\n     * Is item disabled\n     */\n    isDisabled?: boolean,\n\n    /**\n     * MenuItem label\n     */\n    label: React.ReactNode,\n\n    /**\n     * Optional description to display to describe the item\n     */\n    description?: string;\n\n    /**\n     * A leading icon display before the label\n     */\n    iconStart?: React.ReactElement,\n\n    /**\n     * A trailing icon display at the end of MenuItem\n     */\n    iconEnd?: React.ReactElement,\n\n    /**\n     * MenuItem variants\n     */\n    variant?: MenuItemVariant,\n\n    /**\n     * Optional image to display to describe the menu item\n     */\n    image?: React.ReactElement,\n\n    /**\n     * If there's an image, it should be this size\n     */\n    imageSize?: MenuItemImageSize,\n\n    /**\n     * Optional role for accessibility (e.g., if being used as an option in Dropdown)\n     */\n    role?: string,\n\n    /**\n     * Optional value which can be returned when being used in user input elements such as Dropdown\n     */\n    value?: unknown,\n\n    /**\n     * Function triggered on clicking the item\n     */\n    onClick?: React.MouseEventHandler,\n\n    /**\n     * Function triggered when the mouse pointer hovering the item\n     */\n    onMouseEnter?: React.MouseEventHandler,\n\n    /**\n     * Function triggered when the mouse pointer move off the item\n     */\n    onMouseLeave?: React.MouseEventHandler,\n\n    /**\n     * Function triggered when a key is pressed\n     */\n    onKeyPress?: React.KeyboardEventHandler\n\n    /**\n     * Which icon size to render. The default is small\n     */\n    iconSize?: 'small' | 'default' | 'big';\n};\n"]}