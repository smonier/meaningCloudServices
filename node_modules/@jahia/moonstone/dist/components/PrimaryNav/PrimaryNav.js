import _extends from "@babel/runtime/helpers/extends";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["headerLogo", "top", "bottom", "headerCaption", "modeIcon"];
import React, { useState } from 'react';
import clsx from 'clsx';
import "./PrimaryNav.css";
import { PrimaryNavContext } from "./PrimaryNav.context";
import { MenuIcon, ArrowLeft } from "../../icons";

var NavButton = function NavButton(_ref) {
  var isExpanded = _ref.isExpanded,
      toggleExpand = _ref.toggleExpand,
      modeIcon = _ref.modeIcon;

  if (isExpanded) {
    return /*#__PURE__*/React.createElement("button", {
      className: clsx('moonstone-primaryNav_button'),
      type: "button",
      role: "primary-nav-control",
      onClick: toggleExpand
    }, /*#__PURE__*/React.createElement(ArrowLeft, {
      size: "big"
    }));
  }

  var icon;

  if (modeIcon) {
    icon = /*#__PURE__*/React.cloneElement(modeIcon, {
      className: clsx('moonstone-primaryNav_modeIcon')
    });
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, icon, /*#__PURE__*/React.createElement("button", {
    className: clsx('moonstone-primaryNav_button'),
    type: "button",
    role: "primary-nav-control",
    onClick: toggleExpand
  }, /*#__PURE__*/React.createElement(MenuIcon, {
    size: "big"
  })));
};

var NavHeader = function NavHeader(_ref2) {
  var headerCaption = _ref2.headerCaption,
      modeIcon = _ref2.modeIcon,
      headerLogo = _ref2.headerLogo;
  var icon;

  if (modeIcon) {
    icon = /*#__PURE__*/React.cloneElement(modeIcon, {
      className: clsx('moonstone-primaryNav_modeIconHeader')
    });
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, headerLogo, /*#__PURE__*/React.createElement("div", {
    className: clsx('flexRow_nowrap', 'alignCenter', 'moonstone-primaryNav_headerCaption')
  }, icon, headerCaption));
};

export var PrimaryNav = function PrimaryNav(_ref3) {
  var _ref3$headerLogo = _ref3.headerLogo,
      headerLogo = _ref3$headerLogo === void 0 ? '' : _ref3$headerLogo,
      _ref3$top = _ref3.top,
      top = _ref3$top === void 0 ? null : _ref3$top,
      _ref3$bottom = _ref3.bottom,
      bottom = _ref3$bottom === void 0 ? null : _ref3$bottom,
      _ref3$headerCaption = _ref3.headerCaption,
      headerCaption = _ref3$headerCaption === void 0 ? '' : _ref3$headerCaption,
      modeIcon = _ref3.modeIcon,
      props = _objectWithoutProperties(_ref3, _excluded);

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isExpanded = _useState2[0],
      setExpanded = _useState2[1];

  var toggleExpand = function toggleExpand() {
    setExpanded(!isExpanded);
  };

  return /*#__PURE__*/React.createElement(PrimaryNavContext.Provider, {
    value: {
      isExpanded: isExpanded,
      collapse: function collapse() {
        return setExpanded(false);
      }
    }
  }, /*#__PURE__*/React.createElement("nav", _extends({}, props, {
    "aria-expanded": isExpanded,
    className: clsx('moonstone-primaryNav', {
      'moonstone-expanded': isExpanded
    }, 'flexCol_nowrap')
  }), /*#__PURE__*/React.createElement("div", {
    className: clsx('flexRow_nowrap', 'moonstone-primaryNav_header')
  }, /*#__PURE__*/React.createElement("div", {
    className: clsx('moonstone-primaryNav_buttonContainer', 'flexRow_center', 'alignCenter')
  }, /*#__PURE__*/React.createElement(NavButton, {
    isExpanded: isExpanded,
    toggleExpand: toggleExpand,
    modeIcon: modeIcon
  })), /*#__PURE__*/React.createElement("div", {
    className: clsx('flexCol_center', 'alignCenter', 'flexFluid', 'moonstone-primaryNav_logoCaptionGroup')
  }, /*#__PURE__*/React.createElement(NavHeader, {
    headerCaption: headerCaption,
    modeIcon: modeIcon,
    headerLogo: headerLogo
  }))), /*#__PURE__*/React.createElement("ul", {
    className: clsx('flexCol_nowrap', 'flexFluid', 'moonstone-primaryNav_top')
  }, top), /*#__PURE__*/React.createElement("ul", null, bottom)), isExpanded && /*#__PURE__*/React.createElement("div", {
    className: "moonstone-primaryNav_overlay",
    onClick: toggleExpand
  }));
};
PrimaryNav.displayName = 'PrimaryNav';
//# sourceMappingURL=PrimaryNav.js.map
