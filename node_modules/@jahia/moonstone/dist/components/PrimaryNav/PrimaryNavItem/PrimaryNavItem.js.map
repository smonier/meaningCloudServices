{"version":3,"sources":["PrimaryNavItem.tsx"],"names":["React","useContext","clsx","Typography","PrimaryNavContext","Item","icon","label","textVariant","subtitle","button","props","ItemTypeResolver","url","PrimaryNavItem","className","isSelected","onClick","undefined","badge","primaryNavContext","e","collapse","displayName"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport clsx from 'clsx';\nimport './PrimaryNavItem.scss';\nimport {ItemProps, ItemTypeResolverProps, PrimaryNavItemProps} from './PrimaryNavItem.types';\nimport {Typography} from '~/components/Typography';\nimport {PrimaryNavContext} from '../PrimaryNav.context';\n\n// Internal component\nconst Item: React.FC<ItemProps> = ({icon, label, textVariant, subtitle, button}) => (\n    <>\n        <div className={clsx('moonstone-primaryNavItem_content')}>\n            <div className={clsx('moonstone-primaryNavItem_iconContainer')}>\n                {icon && <icon.type {...icon.props} size=\"big\"/>}\n            </div>\n\n            <div className={clsx('moonstone-primaryNavItem_textContainer')}>\n                <Typography isNowrap\n                            variant={textVariant}\n                            component=\"span\"\n                            className={clsx('moonstone-primaryNavItem_label')}\n                >\n                    {label}\n                </Typography>\n                {subtitle && (\n                    <Typography\n                        isNowrap\n                        component=\"div\"\n                        variant=\"caption\"\n                        className={clsx('moonstone-primaryNavItem_label', 'moonstone-subtitle')}\n                    >\n                        {subtitle}\n                    </Typography>\n                )}\n            </div>\n        </div>\n        {button && (\n            <div className={clsx('moonstone-primaryNavItem_buttonContainer')}>\n                {button}\n            </div>\n        )}\n    </>\n);\n\n// Internal component\nconst ItemTypeResolver: React.FC<ItemTypeResolverProps> = ({url, icon, label, subtitle, button}) => {\n    if (url) {\n        return (\n            <a className={clsx('moonstone-primaryNavItem', 'moonstone-primaryNavItem_linkItem')}\n               href={url}\n               target=\"_blank\"\n               rel=\"noopener noreferrer\"\n            >\n                <Item icon={icon} label={label} subtitle={subtitle} textVariant=\"body\" button={button}/>\n            </a>\n        );\n    }\n\n    return (\n        <Item icon={icon} label={label} subtitle={subtitle} textVariant=\"subheading\" button={button}/>\n    );\n};\n\nexport const PrimaryNavItem: React.FC<PrimaryNavItemProps> = ({\n    label = '',\n    icon = null,\n    className = null,\n    subtitle = null,\n    url = null,\n    button = null,\n    isSelected = false,\n    onClick = () => undefined,\n    badge = null,\n    ...props\n}) => {\n    const primaryNavContext = useContext(PrimaryNavContext);\n\n    return (\n        <li\n            className={clsx(\n                'moonstone-primaryNavItem',\n                {'moonstone-selected': isSelected},\n                className\n            )}\n            title={label}\n            onClick={e => {\n                primaryNavContext.collapse();\n                onClick(e);\n            }}\n            {...props}\n        >\n            <ItemTypeResolver icon={icon} label={label} subtitle={subtitle} url={url} button={button}/>\n\n            {badge && (\n                <badge.type\n                    className={clsx('moonstone-primaryNavItem_badge')}\n                    color=\"danger\"\n                    type=\"round\"\n                    label={badge.props.label}\n                />\n            )}\n        </li>\n    );\n};\n\nPrimaryNavItem.displayName = 'PrimaryNavItem';\n"]}