{"version":3,"sources":["PrimaryNav.tsx"],"names":["React","useState","clsx","PrimaryNavContext","MenuIcon","ArrowLeft","NavButton","isExpanded","toggleExpand","modeIcon","icon","cloneElement","className","NavHeader","headerCaption","headerLogo","PrimaryNav","top","bottom","props","setExpanded","collapse","displayName"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport clsx from 'clsx';\nimport './PrimaryNav.scss';\nimport {NavButtonProps, NavHeaderProps, PrimaryNavProps} from './PrimaryNav.types';\nimport {PrimaryNavContext} from './PrimaryNav.context';\nimport {MenuIcon, ArrowLeft} from '~/icons';\n\nconst NavButton: React.FC<NavButtonProps> = ({isExpanded, toggleExpand, modeIcon}) => {\n    if (isExpanded) {\n        return (\n            <button\n                className={clsx('moonstone-primaryNav_button')}\n                type=\"button\"\n                role=\"primary-nav-control\"\n                onClick={toggleExpand}\n            >\n                <ArrowLeft size=\"big\"/>\n            </button>\n        );\n    }\n\n    let icon;\n\n    if (modeIcon) {\n        icon = React.cloneElement(modeIcon, {\n            className: clsx('moonstone-primaryNav_modeIcon')\n        });\n    }\n\n    return (\n        <>\n            {icon}\n            <button\n                className={clsx('moonstone-primaryNav_button')}\n                type=\"button\"\n                role=\"primary-nav-control\"\n                onClick={toggleExpand}\n            >\n                <MenuIcon size=\"big\"/>\n            </button>\n        </>\n    );\n};\n\nconst NavHeader: React.FC<NavHeaderProps> = ({headerCaption, modeIcon, headerLogo}) => {\n    let icon;\n\n    if (modeIcon) {\n        icon = React.cloneElement(modeIcon, {\n            className: clsx('moonstone-primaryNav_modeIconHeader')\n        });\n    }\n\n    return (\n        <>\n            {headerLogo}\n            <div className={clsx('flexRow_nowrap', 'alignCenter', 'moonstone-primaryNav_headerCaption')}>\n                {icon}{headerCaption}\n            </div>\n        </>\n    );\n};\n\nexport const PrimaryNav: React.FC<PrimaryNavProps> = ({\n    headerLogo = '',\n    top = null,\n    bottom = null,\n    headerCaption = '',\n    modeIcon,\n    ...props\n}) => {\n    const [isExpanded, setExpanded] = useState(false);\n\n    const toggleExpand = () => {\n        setExpanded(!isExpanded);\n    };\n\n    return (\n        <PrimaryNavContext.Provider value={{isExpanded, collapse: () => setExpanded(false)}}>\n            <nav\n                {...props}\n                aria-expanded={isExpanded}\n                className={clsx(\n                    'moonstone-primaryNav',\n                    {'moonstone-expanded': isExpanded},\n                    'flexCol_nowrap'\n                )}\n            >\n                <div className={clsx('flexRow_nowrap', 'moonstone-primaryNav_header')}>\n                    <div className={clsx('moonstone-primaryNav_buttonContainer', 'flexRow_center', 'alignCenter')}>\n                        <NavButton isExpanded={isExpanded} toggleExpand={toggleExpand} modeIcon={modeIcon}/>\n                    </div>\n                    <div\n                        className={clsx(\n                            'flexCol_center',\n                            'alignCenter',\n                            'flexFluid',\n                            'moonstone-primaryNav_logoCaptionGroup'\n                        )}\n                    >\n                        <NavHeader headerCaption={headerCaption} modeIcon={modeIcon} headerLogo={headerLogo}/>\n                    </div>\n                </div>\n\n                <ul className={clsx('flexCol_nowrap', 'flexFluid', 'moonstone-primaryNav_top')}>\n                    {top}\n                </ul>\n\n                <ul>\n                    {bottom}\n                </ul>\n            </nav>\n            {isExpanded && <div className=\"moonstone-primaryNav_overlay\" onClick={toggleExpand}/>}\n        </PrimaryNavContext.Provider>\n    );\n};\n\nPrimaryNav.displayName = 'PrimaryNav';\n"]}