import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["id", "label", "icon", "onClick", "className", "children"];
import React from 'react';
import clsx from 'clsx';
import "./AccordionItem.css";
import { Typography } from "../../Typography";
import { AccordionContext } from "../Accordion.context";
export var AccordionItem = function AccordionItem(_ref) {
  var id = _ref.id,
      label = _ref.label,
      _ref$icon = _ref.icon,
      icon = _ref$icon === void 0 ? null : _ref$icon,
      _ref$onClick = _ref.onClick,
      onClick = _ref$onClick === void 0 ? function () {
    return undefined;
  } : _ref$onClick,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded);

  var context = React.useContext(AccordionContext);
  var open = context.currentItem === id;

  var handleClick = function handleClick(e, isOpen) {
    onClick(e, !isOpen);
    context.onSetOpenedItem(id);
  };

  return /*#__PURE__*/React.createElement("section", _extends({}, props, {
    className: clsx('moonstone-accordionItem', {
      'moonstone-reversed': context.isReversed
    }, 'flexCol', open ? 'flexFluid' : null, className)
  }), /*#__PURE__*/React.createElement("header", {
    className: clsx('moonstone-accordionItem_header', {
      'moonstone-selected': open,
      'moonstone-reversed': context.isReversed
    }, 'flexRow', 'alignCenter'),
    role: "accordion-item",
    "aria-controls": id,
    "aria-expanded": open,
    onClick: function onClick(e) {
      return handleClick(e, open);
    }
  }, icon && /*#__PURE__*/React.createElement("div", {
    className: clsx('moonstone-accordionItem_iconContainer', 'flexRow_center', 'alignCenter')
  }, icon && /*#__PURE__*/React.createElement(icon.type, _extends({}, icon.props, {
    size: "big"
  }))), /*#__PURE__*/React.createElement(Typography, {
    isNowrap: true,
    variant: "subheading",
    weight: open ? 'bold' : 'default',
    className: clsx('flexFluid')
  }, label)), open && /*#__PURE__*/React.createElement("div", {
    className: clsx('moonstone-accordionItem_content', 'flexFluid', 'flexCol'),
    role: "region"
  }, children));
};
AccordionItem.displayName = 'AccordionItem';
//# sourceMappingURL=AccordionItem.js.map
