{"version":3,"sources":["Button.types.ts"],"names":["buttonSizes","buttonVariants","buttonColors"],"mappings":"AAGA,OAAO,IAAMA,WAAW,GAAG,CAAC,OAAD,EAAU,SAAV,EAAqB,KAArB,CAApB;AAGP,OAAO,IAAMC,cAAc,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,UAArB,CAAvB;AAGP,OAAO,IAAMC,YAAY,GAAG,CAAC,SAAD,EAAY,QAAZ,EAAsB,QAAtB,CAArB","sourcesContent":["import React from 'react';\n\nexport type ButtonSize = 'small' | 'default' | 'big';\nexport const buttonSizes = ['small', 'default', 'big'];\n\nexport type ButtonVariant = 'default' | 'ghost' | 'outlined';\nexport const buttonVariants = ['default', 'ghost', 'outlined'];\n\nexport type ButtonColor = 'default' | 'accent' | 'danger';\nexport const buttonColors = ['default', 'accent', 'danger'];\n\nexport type ButtonProps = {\n    /**\n     * Button label\n     */\n    label?: React.ReactNode;\n\n    /**\n     * Icon size\n     */\n    size?: ButtonSize;\n\n    /**\n     * Optional icon element to render on the left of the label or without label\n     */\n    icon?: React.ReactElement;\n\n    /**\n     * Optional icon element to render on the right of the label, it's only display when a label is provided\n     */\n    iconEnd?: React.ReactElement;\n\n    /**\n     * Button style\n     */\n    variant?: ButtonVariant;\n\n    /**\n     * Button color\n     */\n    color?: ButtonColor;\n\n    /**\n     * Is button disabled\n     */\n    isDisabled?: boolean;\n\n    /**\n     * Is button color reversed\n     */\n    isReversed?: boolean;\n\n    /**\n     * Is button loading\n     */\n     isLoading?: boolean;\n\n    /**\n     * Additional classname\n     */\n    className?: string;\n\n    /**\n     * Function trigger on click\n     */\n    onClick?: React.MouseEventHandler;\n}\n"]}