import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["label", "value", "size", "onClick", "className"];
import React from 'react';
import clsx from 'clsx';
import "./Tag.css";
import { Typography } from "../Typography";
export var Tag = function Tag(_ref) {
  var label = _ref.label,
      value = _ref.value,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'medium' : _ref$size,
      _onClick = _ref.onClick,
      className = _ref.className,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement("button", _extends({
    type: "button",
    className: clsx('moonstone-tag', className, {
      'moonstone-small': size === 'small'
    }),
    onClick: function onClick(e) {
      return _onClick(e, value);
    }
  }, props), label && /*#__PURE__*/React.createElement(Typography, {
    isNowrap: true,
    component: "span",
    variant: "caption"
  }, label));
};
Tag.displayName = 'Tag';
//# sourceMappingURL=Tag.js.map
