import _extends from "@babel/runtime/helpers/extends";
import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["defaultOpenedItems"];
import React, { useState } from 'react';
import { ControlledTreeView } from "./ControlledTreeView";

var UncontrolledTreeViewForwardRef = function UncontrolledTreeViewForwardRef(_ref, ref) {
  var _ref$defaultOpenedIte = _ref.defaultOpenedItems,
      defaultOpenedItems = _ref$defaultOpenedIte === void 0 ? [] : _ref$defaultOpenedIte,
      others = _objectWithoutProperties(_ref, _excluded);

  var _useState = useState(defaultOpenedItems),
      _useState2 = _slicedToArray(_useState, 2),
      openedItems = _useState2[0],
      setOpenedItems = _useState2[1];

  var onOpenItem = function onOpenItem(node) {
    setOpenedItems(function (prevOpenedItems) {
      return [].concat(_toConsumableArray(prevOpenedItems), [node.id]);
    });
  };

  var onCloseItem = function onCloseItem(node) {
    setOpenedItems(function (prevOpenedItems) {
      return prevOpenedItems.filter(function (item) {
        return item !== node.id;
      });
    });
  };

  return /*#__PURE__*/React.createElement(ControlledTreeView, _extends({
    ref: ref,
    openedItems: openedItems,
    onOpenItem: onOpenItem,
    onCloseItem: onCloseItem
  }, others));
};

export var UncontrolledTreeView = /*#__PURE__*/React.forwardRef(UncontrolledTreeViewForwardRef);
//# sourceMappingURL=UncontrolledTreeView.js.map
