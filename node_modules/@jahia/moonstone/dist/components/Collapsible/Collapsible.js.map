{"version":3,"sources":["Collapsible.tsx"],"names":["React","UncontrolledCollapsible","ControlledCollapsible","CollapsibleForwardRef","ref","isExpanded","props","Collapsible","forwardRef","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,uBAAR;AACA,SAAQC,qBAAR;;AAEA,IAAMC,qBAAuF,GAAG,SAA1FA,qBAA0F,OAAyBC,GAAzB,EAAiC;AAAA,MAA/BC,UAA+B,QAA/BA,UAA+B;AAAA,MAAhBC,KAAgB;;AAC7H,MAAI,OAAOD,UAAP,KAAsB,WAA1B,EAAuC;AACnC,wBAAO,oBAAC,uBAAD;AAAyB,MAAA,GAAG,EAAED;AAA9B,OAAuCE,KAAvC,EAAP;AACH;;AAED,sBAAO,oBAAC,qBAAD;AAAuB,IAAA,GAAG,EAAEF,GAA5B;AAAiC,IAAA,UAAU,EAAEC;AAA7C,KAA6DC,KAA7D,EAAP;AACH,CAND;;AAQA,OAAO,IAAMC,WAAW,gBAAGP,KAAK,CAACQ,UAAN,CAAiBL,qBAAjB,CAApB;AAEPI,WAAW,CAACE,WAAZ,GAA0B,aAA1B","sourcesContent":["import React from 'react';\nimport {CollapsibleProps} from './Collapsible.types';\nimport {UncontrolledCollapsible} from './UncontrolledCollapsible';\nimport {ControlledCollapsible} from './ControlledCollapsible';\n\nconst CollapsibleForwardRef: React.ForwardRefRenderFunction<HTMLDivElement, CollapsibleProps> = ({isExpanded, ...props}, ref) => {\n    if (typeof isExpanded === 'undefined') {\n        return <UncontrolledCollapsible ref={ref} {...props}/>;\n    }\n\n    return <ControlledCollapsible ref={ref} isExpanded={isExpanded} {...props}/>;\n};\n\nexport const Collapsible = React.forwardRef(CollapsibleForwardRef);\n\nCollapsible.displayName = 'Collapsible';\n"]}