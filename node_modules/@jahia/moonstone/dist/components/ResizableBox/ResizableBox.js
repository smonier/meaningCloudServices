import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["enable", "minWidth", "maxWidth", "defaultSize", "className", "size", "children", "onResizeStart", "onResizing", "onResizeStop"];
import React from 'react';
import { Resizable } from 're-resizable';
import clsx from 'clsx';
import "./ResizableBox.css";
import { HandleResize } from "../../icons";
import { zones } from "./ResizableBox.types";
export var ResizableBox = function ResizableBox(_ref) {
  var _ref$enable = _ref.enable,
      enable = _ref$enable === void 0 ? ['right'] : _ref$enable,
      _ref$minWidth = _ref.minWidth,
      minWidth = _ref$minWidth === void 0 ? 50 : _ref$minWidth,
      _ref$maxWidth = _ref.maxWidth,
      maxWidth = _ref$maxWidth === void 0 ? 200 : _ref$maxWidth,
      _ref$defaultSize = _ref.defaultSize,
      defaultSize = _ref$defaultSize === void 0 ? {
    width: '100%',
    height: 'auto'
  } : _ref$defaultSize,
      _ref$className = _ref.className,
      className = _ref$className === void 0 ? '' : _ref$className,
      size = _ref.size,
      _ref$children = _ref.children,
      children = _ref$children === void 0 ? null : _ref$children,
      onResizeStart = _ref.onResizeStart,
      onResizing = _ref.onResizing,
      onResizeStop = _ref.onResizeStop,
      props = _objectWithoutProperties(_ref, _excluded);

  var enableZones = {};
  zones.forEach(function (zone) {
    enableZones[zone] = enable.indexOf(zone) > -1;
  });
  return /*#__PURE__*/React.createElement(Resizable, _extends({
    role: "resizable-panel",
    enable: enableZones,
    minWidth: minWidth,
    maxWidth: maxWidth,
    size: size,
    defaultSize: defaultSize,
    handleClasses: {
      right: clsx('moonstone-resizable_handle'),
      left: clsx('moonstone-resizable_handle')
    },
    handleComponent: {
      right: /*#__PURE__*/React.createElement(HandleResize, {
        className: clsx('moonstone-resizable_handle_icon'),
        size: "big"
      }),
      left: /*#__PURE__*/React.createElement(HandleResize, {
        className: clsx('moonstone-resizable_handle_icon'),
        size: "big"
      })
    },
    className: clsx(className),
    onResize: onResizing,
    onResizeStart: onResizeStart,
    onResizeStop: onResizeStop
  }, props), children);
};
ResizableBox.displayName = 'ResizableBox';
//# sourceMappingURL=ResizableBox.js.map
