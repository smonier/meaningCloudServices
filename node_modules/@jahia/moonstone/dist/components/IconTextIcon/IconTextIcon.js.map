{"version":3,"sources":["IconTextIcon.tsx"],"names":["React","clsx","Typography","IconTextIcon","component","iconStart","iconEnd","iconSize","typographyProps","className","children","props","typoProps","createElement"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA;AACA,SAAQC,UAAR;AAEA,OAAO,IAAMC,YAAyC,GAAG,SAA5CA,YAA4C,OASnD;AAAA,4BARFC,SAQE;AAAA,MARFA,SAQE,+BARU,KAQV;AAAA,MAPFC,SAOE,QAPFA,SAOE;AAAA,MANFC,OAME,QANFA,OAME;AAAA,2BALFC,QAKE;AAAA,MALFA,QAKE,8BALS,SAKT;AAAA,MAJFC,eAIE,QAJFA,eAIE;AAAA,MAHFC,SAGE,QAHFA,SAGE;AAAA,MAFFC,QAEE,QAFFA,QAEE;AAAA,MADCC,KACD;;AACF;AACA;AACA,MAAMC,SAAS;AAAIR,IAAAA,SAAS,EAAE;AAAf,KAA0BI,eAA1B,CAAf;;AAEA,sBAAOR,KAAK,CAACa,aAAN,CACHT,SADG;AAGCK,IAAAA,SAAS,EAAER,IAAI,CAAC,wBAAD,EAA2B,gBAA3B,EAA6C,aAA7C,EAA4DQ,SAA5D;AAHhB,KAIIE,KAJJ,gBAOC,0CACKN,SAAS,iBACN,oBAAC,SAAD,CAAW,IAAX;AACI,IAAA,IAAI,EAAEE,QADV;AAEI,IAAA,SAAS,EAAEN,IAAI,CAAC,kCAAD,EAAqCI,SAAS,CAACM,KAAV,CAAgBF,SAArD;AAFnB,KAGQJ,SAAS,CAACM,KAHlB,EAFR,eASI,oBAAC,UAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,SAAS,EAAEV,IAAI,CAAC,WAAD;AAFnB,KAGQW,SAHR,GAKKF,QALL,CATJ,EAiBKJ,OAAO,iBACJ,oBAAC,OAAD,CAAS,IAAT;AACI,IAAA,IAAI,EAAEC,QADV;AAEI,IAAA,SAAS,EAAEN,IAAI,CAAC,gCAAD,EAAmCK,OAAO,CAACK,KAAR,CAAcF,SAAjD;AAFnB,KAGQH,OAAO,CAACK,KAHhB,EAlBR,CAPD,CAAP;AAkCH,CAhDM","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\n\nimport {IconTextIconProps} from './IconTextIcon.types';\nimport './IconTextIcon.scss';\nimport {Typography} from '~/components';\n\nexport const IconTextIcon: React.FC<IconTextIconProps> = ({\n    component = 'div',\n    iconStart,\n    iconEnd,\n    iconSize = 'default',\n    typographyProps,\n    className,\n    children,\n    ...props\n}) => {\n    // Default Typography component props to use. Can be overwritten through\n    // the use of the typographyProps property\n    const typoProps = {component: 'span', ...typographyProps};\n\n    return React.createElement(\n        component,\n        {\n            className: clsx('moonstone-IconTextIcon', 'flexRow_nowrap', 'alignCenter', className),\n            ...props\n        },\n        (\n            <>\n                {iconStart && (\n                    <iconStart.type\n                        size={iconSize}\n                        className={clsx('moonstone-IconTextIcon_iconStart', iconStart.props.className)}\n                        {...iconStart.props}\n                    />\n                )}\n\n                <Typography\n                    isNowrap\n                    className={clsx('flexFluid')}\n                    {...typoProps}\n                >\n                    {children}\n                </Typography>\n\n                {iconEnd && (\n                    <iconEnd.type\n                        size={iconSize}\n                        className={clsx('moonstone-IconTextIcon_iconEnd', iconEnd.props.className)}\n                        {...iconEnd.props}\n                    />\n                )}\n            </>\n        )\n    );\n};\n"]}