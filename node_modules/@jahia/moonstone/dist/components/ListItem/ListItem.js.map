{"version":3,"sources":["ListItem.tsx"],"names":["React","clsx","Typography","ListItem","label","description","iconStart","iconEnd","tabIndex","image","imageSize","className","typographyVariant","iconSize","props","cssListItem","isDisplayImage","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA;AACA,SAAQC,UAAR;AAGA,OAAO,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAY3C;AAAA,MAXFC,KAWE,QAXFA,KAWE;AAAA,MAVFC,WAUE,QAVFA,WAUE;AAAA,4BATFC,SASE;AAAA,MATFA,SASE,+BATU,IASV;AAAA,0BARFC,OAQE;AAAA,MARFA,OAQE,6BARQ,IAQR;AAAA,MAPFC,QAOE,QAPFA,QAOE;AAAA,MANFC,KAME,QANFA,KAME;AAAA,MALFC,SAKE,QALFA,SAKE;AAAA,4BAJFC,SAIE;AAAA,MAJFA,SAIE,+BAJU,EAIV;AAAA,mCAHFC,iBAGE;AAAA,MAHFA,iBAGE,sCAHkB,SAGlB;AAAA,2BAFFC,QAEE;AAAA,MAFFA,QAEE,8BAFS,OAET;AAAA,MADCC,KACD;;AACF,MAAMC,WAAW,GAAGd,IAAI,CACpB,oBADoB,EAEpB,SAFoB,EAGpBU,SAHoB,CAAxB,CADE,CAMF;;AACA,MAAMK,cAAc,GAAGP,KAAK,IAAI,CAACH,SAAjC;AAEA,sBACI;AACI,IAAA,SAAS,EAAEL,IAAI,CAACc,WAAD,CADnB;AAEI,IAAA,QAAQ,EAAEP;AAFd,KAGQM,KAHR,GAKKE,cAAc,iBACX;AAAQ,IAAA,SAAS,EAAEf,IAAI,oCAA6BS,SAA7B,GAA0C,SAA1C,EAAqD,aAArD;AAAvB,KACKD,KADL,CANR,EAUKH,SAAS,iBACN;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI,oBAAC,SAAD,CAAW,IAAX,eAAoBA,SAAS,CAACQ,KAA9B;AAAqC,IAAA,IAAI,EAAED;AAA3C,KADJ,CAXR,eAgBI;AAAK,IAAA,SAAS,EAAEZ,IAAI,CAChBe,cAAc,GAAG,gBAAH,GAAsB,SADpB,EAEhB,WAFgB;AAApB,kBAKI,oBAAC,UAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,SAAS,EAAEf,IAAI,CAACe,cAAc,GAAG,IAAH,GAAU,WAAzB,CAFnB;AAGI,IAAA,OAAO,EAAEJ,iBAHb;AAII,IAAA,SAAS,EAAC;AAJd,KAMKR,KANL,CALJ,EAaKC,WAAW,iBACR,oBAAC,UAAD;AACI,IAAA,OAAO,EAAC,SADZ;AAEI,IAAA,MAAM,EAAC,SAFX;AAGI,IAAA,SAAS,EAAC,MAHd;AAII,IAAA,SAAS,EAAEJ,IAAI,CAAC,gCAAD;AAJnB,KAMKI,WANL,CAdR,CAhBJ,EAyCKE,OAAO,iBACJ;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI,oBAAC,OAAD,CAAS,IAAT,eAAkBA,OAAO,CAACO,KAA1B;AAAiC,IAAA,IAAI,EAAED;AAAvC,KADJ,CA1CR,CADJ;AAiDH,CAtEM;AAwEPV,QAAQ,CAACc,WAAT,GAAuB,UAAvB","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport './ListItem.scss';\nimport {Typography} from '~/components/Typography';\nimport {ListItemProps} from './ListItem.types';\n\nexport const ListItem: React.FC<ListItemProps> = ({\n    label,\n    description,\n    iconStart = null,\n    iconEnd = null,\n    tabIndex,\n    image,\n    imageSize,\n    className = '',\n    typographyVariant = 'caption',\n    iconSize = 'small',\n    ...props\n}) => {\n    const cssListItem = clsx(\n        'moonstone-listItem',\n        'flexRow',\n        className\n    );\n    // When an image and an iconStart is provided we display the icon\n    const isDisplayImage = image && !iconStart;\n\n    return (\n        <li\n            className={clsx(cssListItem)}\n            tabIndex={tabIndex}\n            {...props}\n        >\n            {isDisplayImage && (\n                <figure className={clsx(`moonstone-listItem-image_${imageSize}`, 'flexRow', 'alignCenter')}>\n                    {image}\n                </figure>\n            )}\n            {iconStart && (\n                <div className=\"moonstone-listItem_iconStart flexRow_center alignCenter\">\n                    <iconStart.type {...iconStart.props} size={iconSize}/>\n                </div>\n            )}\n\n            <div className={clsx(\n                isDisplayImage ? 'flexCol_center' : 'flexCol',\n                'flexFluid'\n                )}\n            >\n                <Typography\n                    isNowrap\n                    className={clsx(isDisplayImage ? null : 'flexFluid')}\n                    variant={typographyVariant}\n                    component=\"span\"\n                >\n                    {label}\n                </Typography>\n                {description && (\n                    <Typography\n                        variant=\"caption\"\n                        weight=\"default\"\n                        component=\"span\"\n                        className={clsx('moonstone-listItem_description')}\n                    >\n                        {description}\n                    </Typography>\n                )}\n            </div>\n\n            {iconEnd && (\n                <div className=\"moonstone-listItem_iconEnd\">\n                    <iconEnd.type {...iconEnd.props} size={iconSize}/>\n                </div>\n            )}\n        </li>\n    );\n};\n\nListItem.displayName = 'ListItem';\n"]}