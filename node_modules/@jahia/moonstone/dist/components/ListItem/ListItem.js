import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["label", "description", "iconStart", "iconEnd", "tabIndex", "image", "imageSize", "className", "typographyVariant", "iconSize"];
import React from 'react';
import clsx from 'clsx';
import "./ListItem.css";
import { Typography } from "../Typography";
export var ListItem = function ListItem(_ref) {
  var label = _ref.label,
      description = _ref.description,
      _ref$iconStart = _ref.iconStart,
      iconStart = _ref$iconStart === void 0 ? null : _ref$iconStart,
      _ref$iconEnd = _ref.iconEnd,
      iconEnd = _ref$iconEnd === void 0 ? null : _ref$iconEnd,
      tabIndex = _ref.tabIndex,
      image = _ref.image,
      imageSize = _ref.imageSize,
      _ref$className = _ref.className,
      className = _ref$className === void 0 ? '' : _ref$className,
      _ref$typographyVarian = _ref.typographyVariant,
      typographyVariant = _ref$typographyVarian === void 0 ? 'caption' : _ref$typographyVarian,
      _ref$iconSize = _ref.iconSize,
      iconSize = _ref$iconSize === void 0 ? 'small' : _ref$iconSize,
      props = _objectWithoutProperties(_ref, _excluded);

  var cssListItem = clsx('moonstone-listItem', 'flexRow', className); // When an image and an iconStart is provided we display the icon

  var isDisplayImage = image && !iconStart;
  return /*#__PURE__*/React.createElement("li", _extends({
    className: clsx(cssListItem),
    tabIndex: tabIndex
  }, props), isDisplayImage && /*#__PURE__*/React.createElement("figure", {
    className: clsx("moonstone-listItem-image_".concat(imageSize), 'flexRow', 'alignCenter')
  }, image), iconStart && /*#__PURE__*/React.createElement("div", {
    className: "moonstone-listItem_iconStart flexRow_center alignCenter"
  }, /*#__PURE__*/React.createElement(iconStart.type, _extends({}, iconStart.props, {
    size: iconSize
  }))), /*#__PURE__*/React.createElement("div", {
    className: clsx(isDisplayImage ? 'flexCol_center' : 'flexCol', 'flexFluid')
  }, /*#__PURE__*/React.createElement(Typography, {
    isNowrap: true,
    className: clsx(isDisplayImage ? null : 'flexFluid'),
    variant: typographyVariant,
    component: "span"
  }, label), description && /*#__PURE__*/React.createElement(Typography, {
    variant: "caption",
    weight: "default",
    component: "span",
    className: clsx('moonstone-listItem_description')
  }, description)), iconEnd && /*#__PURE__*/React.createElement("div", {
    className: "moonstone-listItem_iconEnd"
  }, /*#__PURE__*/React.createElement(iconEnd.type, _extends({}, iconEnd.props, {
    size: iconSize
  }))));
};
ListItem.displayName = 'ListItem';
//# sourceMappingURL=ListItem.js.map
