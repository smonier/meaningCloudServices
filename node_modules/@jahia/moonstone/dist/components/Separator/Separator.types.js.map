{"version":3,"sources":["Separator.types.ts"],"names":["SeparatorSpacings","SeparatorSizes","SeparatorVariants","SeparatorInvisible"],"mappings":"AACA,WAAYA,iBAAZ;;WAAYA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;GAAAA,iB,KAAAA,iB;;AAQZ,WAAYC,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAOZ,WAAYC,iBAAZ;;WAAYA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;GAAAA,iB,KAAAA,iB;;AAMZ,WAAYC,kBAAZ;;WAAYA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;GAAAA,kB,KAAAA,kB","sourcesContent":["type SeparatorSpacing = 'none' | 'small' | 'medium' | 'big';\nexport enum SeparatorSpacings {\n    None = 'none',\n    Small = 'small',\n    Medium = 'medium',\n    Big = 'big'\n}\n\ntype SeparatorSize = 'medium' | 'large' | 'full';\nexport enum SeparatorSizes {\n    Medium = 'medium',\n    Large = 'large',\n    Full = 'full'\n}\n\ntype SeparatorVariant = 'horizontal' | 'vertical';\nexport enum SeparatorVariants {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\ntype SeparatorInvisibleType = 'firstChild' | 'lastChild' | 'onlyChild' | 'firstOrLastChild';\nexport enum SeparatorInvisible {\n    FirstChild = 'firstChild',\n    LastChild = 'lastChild',\n    OnlyChild = 'onlyChild',\n    FirstOrLastChild = 'firstOrLastChild'\n}\n\nexport type SeparatorProps = {\n    /**\n     * Variants: Horizontal or Vertical\n     */\n    variant?: SeparatorVariant,\n\n    /**\n     * Vertical spacings\n     */\n    spacing?: SeparatorSpacing,\n\n    /**\n     * Size\n     */\n    size?: SeparatorSize,\n\n    /**\n     * Hide the separator if it is the firstChild, lastChild, onlyChild or firstOrLastChild\n     * If you don't pass this property then the separator will always be visible\n     */\n    invisible?: SeparatorInvisibleType,\n\n    /**\n     * Additional classname\n     */\n    className?: string\n}\n"]}