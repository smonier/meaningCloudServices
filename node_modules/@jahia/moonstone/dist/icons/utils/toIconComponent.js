import _extends from "@babel/runtime/helpers/extends";
import _typeof from "@babel/runtime/helpers/typeof";
import React from 'react';
import * as Icons from "../components";
import { ImgWrapper, SvgWrapper } from "../../components";

var camelCased = function camelCased(s) {
  return s.replace(/-([a-z])/g, function (g) {
    return g[1].toUpperCase();
  });
};

var toComp = function toComp(node, idx) {
  if (node.nodeType === 1) {
    var props = {
      key: idx
    };
    Array.prototype.slice.call(node.attributes).forEach(function (attr) {
      props[camelCased(attr.name)] = attr.value;
    });
    var children = Array.prototype.slice.call(node.childNodes).map(function (child, idxChild) {
      return toComp(child, idxChild);
    });
    return /*#__PURE__*/React.createElement(node.tagName, props, children);
  }
};

function extract(svg) {
  var parser = new DOMParser();
  var doc = parser.parseFromString(svg, 'image/svg+xml');
  return toComp(doc.documentElement, 0);
}

export var toIconComponentFunction = function toIconComponentFunction(icon) {
  if (_typeof(icon) === 'object') {
    return function (props) {
      return /*#__PURE__*/React.createElement(SvgWrapper, _extends({
        svg: icon
      }, props));
    };
  }

  var iconFunction = Icons[icon];

  if (iconFunction) {
    return iconFunction;
  }

  if (icon.startsWith('<svg')) {
    return function (props) {
      return /*#__PURE__*/React.createElement(SvgWrapper, _extends({
        svg: extract(icon)
      }, props));
    };
  }

  return function (props) {
    return /*#__PURE__*/React.createElement(ImgWrapper, _extends({
      src: icon
    }, props));
  };
};
export var toIconComponent = function toIconComponent(icon, props) {
  return /*#__PURE__*/React.createElement(toIconComponentFunction(icon), props);
};
//# sourceMappingURL=toIconComponent.js.map
