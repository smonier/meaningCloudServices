{"version":3,"sources":["toIconComponent.tsx"],"names":["React","Icons","ImgWrapper","SvgWrapper","camelCased","s","replace","g","toUpperCase","toComp","node","idx","nodeType","props","key","Array","prototype","slice","call","attributes","forEach","attr","name","value","children","childNodes","map","child","idxChild","createElement","tagName","extract","svg","parser","DOMParser","doc","parseFromString","documentElement","toIconComponentFunction","icon","iconFunction","startsWith","toIconComponent"],"mappings":";;AAAA,OAAOA,KAAP,MAAoF,OAApF;AACA,OAAO,KAAKC,KAAZ;AACA,SAAQC,UAAR,EAAoBC,UAApB;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD;AAAA,SAAeA,CAAC,CAACC,OAAF,CAAU,WAAV,EAAuB,UAAAC,CAAC,EAAI;AAC1D,WAAOA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,EAAP;AACH,GAFiC,CAAf;AAAA,CAAnB;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAoBC,GAApB,EAAoC;AAC/C,MAAID,IAAI,CAACE,QAAL,KAAkB,CAAtB,EAAyB;AACrB,QAAMC,KAA+B,GAAG;AAACC,MAAAA,GAAG,EAAEH;AAAN,KAAxC;AACAI,IAAAA,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BR,IAAI,CAACS,UAAhC,EAA4CC,OAA5C,CAAoD,UAACC,IAAD,EAAoB;AACpER,MAAAA,KAAK,CAACT,UAAU,CAACiB,IAAI,CAACC,IAAN,CAAX,CAAL,GAA+BD,IAAI,CAACE,KAApC;AACH,KAFD;AAGA,QAAMC,QAAQ,GAAGT,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BR,IAAI,CAACe,UAAhC,EAA4CC,GAA5C,CAAgD,UAACC,KAAD,EAAqBC,QAArB;AAAA,aAA0CnB,MAAM,CAACkB,KAAD,EAAQC,QAAR,CAAhD;AAAA,KAAhD,CAAjB;AACA,wBAAO5B,KAAK,CAAC6B,aAAN,CAAoBnB,IAAI,CAACoB,OAAzB,EAAkCjB,KAAlC,EAAyCW,QAAzC,CAAP;AACH;AACJ,CATD;;AAWA,SAASO,OAAT,CAAiBC,GAAjB,EAA8B;AAC1B,MAAMC,MAAM,GAAG,IAAIC,SAAJ,EAAf;AAEA,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAP,CAAuBJ,GAAvB,EAA4B,eAA5B,CAAZ;AACA,SAAOvB,MAAM,CAAC0B,GAAG,CAACE,eAAL,EAAsB,CAAtB,CAAb;AACH;;AAED,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,IAAD,EAAoD;AACvF,MAAI,QAAOA,IAAP,MAAgB,QAApB,EAA8B;AAC1B,WAAO,UAAC1B,KAAD;AAAA,0BAA0C,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAE0B;AAAjB,SAA2B1B,KAA3B,EAA1C;AAAA,KAAP;AACH;;AAED,MAAM2B,YAA8B,GAAGvC,KAAK,CAACsC,IAAD,CAA5C;;AACA,MAAIC,YAAJ,EAAkB;AACd,WAAOA,YAAP;AACH;;AAED,MAAID,IAAI,CAACE,UAAL,CAAgB,MAAhB,CAAJ,EAA6B;AACzB,WAAO,UAAC5B,KAAD;AAAA,0BAA0C,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAEkB,OAAO,CAACQ,IAAD;AAAxB,SAAoC1B,KAApC,EAA1C;AAAA,KAAP;AACH;;AAED,SAAO,UAACA,KAAD;AAAA,wBAA0C,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE0B;AAAjB,OAA2B1B,KAA3B,EAA1C;AAAA,GAAP;AACH,CAfM;AAiBP,OAAO,IAAM6B,eAAe,GAAG,SAAlBA,eAAkB,CAACH,IAAD,EAA8B1B,KAA9B,EAAsE;AACjG,sBAAOb,KAAK,CAAC6B,aAAN,CAAoBS,uBAAuB,CAACC,IAAD,CAA3C,EAAmD1B,KAAnD,CAAP;AACH,CAFM","sourcesContent":["import React, {Attributes, FunctionComponent, PropsWithChildren, ReactElement} from 'react';\nimport * as Icons from '~/icons/components';\nimport {ImgWrapper, SvgWrapper} from '~/components';\nimport {SvgWrapperProps} from '~/components/SvgWrapper/SvgWrapper.types';\n\ntype SVGProps = React.HTMLProps<SVGElement> & React.HTMLProps<HTMLElement>;\n\nconst camelCased = (s: string) => s.replace(/-([a-z])/g, g => {\n    return g[1].toUpperCase();\n});\n\nconst toComp = (node: HTMLElement, idx: number) => {\n    if (node.nodeType === 1) {\n        const props: {[key: string]: unknown} = {key: idx};\n        Array.prototype.slice.call(node.attributes).forEach((attr: SVGProps) => {\n            props[camelCased(attr.name)] = attr.value;\n        });\n        const children = Array.prototype.slice.call(node.childNodes).map((child: HTMLElement, idxChild: number) => toComp(child, idxChild));\n        return React.createElement(node.tagName, props, children);\n    }\n};\n\nfunction extract(svg: string) {\n    const parser = new DOMParser();\n\n    const doc = parser.parseFromString(svg, 'image/svg+xml');\n    return toComp(doc.documentElement, 0);\n}\n\nexport const toIconComponentFunction = (icon: string | ReactElement): FunctionComponent => {\n    if (typeof icon === 'object') {\n        return (props: PropsWithChildren<Attributes>) => <SvgWrapper svg={icon} {...props}/>;\n    }\n\n    const iconFunction:FunctionComponent = Icons[icon as keyof typeof Icons];\n    if (iconFunction) {\n        return iconFunction;\n    }\n\n    if (icon.startsWith('<svg')) {\n        return (props: PropsWithChildren<Attributes>) => <SvgWrapper svg={extract(icon)} {...props}/>;\n    }\n\n    return (props: PropsWithChildren<Attributes>) => <ImgWrapper src={icon} {...props}/>;\n};\n\nexport const toIconComponent = (icon: string | ReactElement, props: SvgWrapperProps & Attributes) => {\n    return React.createElement(toIconComponentFunction(icon), props);\n};\n\n"]}