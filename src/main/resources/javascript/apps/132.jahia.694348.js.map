{"version":3,"file":"132.jahia.694348.js","mappings":"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","sources":["webpack://@jahia/meaningCloudServices/./node_modules/graphql/jsutils/isObjectLike.mjs","webpack://@jahia/meaningCloudServices/./node_modules/graphql/language/location.mjs","webpack://@jahia/meaningCloudServices/./node_modules/graphql/language/printLocation.mjs","webpack://@jahia/meaningCloudServices/./node_modules/graphql/error/GraphQLError.mjs","webpack://@jahia/meaningCloudServices/./node_modules/graphql/error/syntaxError.mjs","webpack://@jahia/meaningCloudServices/./node_modules/graphql/language/tokenKind.mjs","webpack://@jahia/meaningCloudServices/./node_modules/graphql/language/directiveLocation.mjs","webpack://@jahia/meaningCloudServices/./node_modules/graphql/language/lexer.mjs","webpack://@jahia/meaningCloudServices/./node_modules/graphql/language/parser.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _nodeLocations, _nodeLocations2, _nodeLocations3;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message);\n    _this.name = 'GraphQLError';\n    _this.originalError = originalError !== null && originalError !== void 0 ? originalError : undefined; // Compute list of blame nodes.\n\n    _this.nodes = undefinedIfEmpty(Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined);\n    var nodeLocations = [];\n\n    for (var _i2 = 0, _ref3 = (_this$nodes = _this.nodes) !== null && _this$nodes !== void 0 ? _this$nodes : []; _i2 < _ref3.length; _i2++) {\n      var _this$nodes;\n\n      var _ref4 = _ref3[_i2];\n      var loc = _ref4.loc;\n\n      if (loc != null) {\n        nodeLocations.push(loc);\n      }\n    }\n\n    nodeLocations = undefinedIfEmpty(nodeLocations); // Compute locations in the source for the given nodes/positions.\n\n    _this.source = source !== null && source !== void 0 ? source : (_nodeLocations = nodeLocations) === null || _nodeLocations === void 0 ? void 0 : _nodeLocations[0].source;\n    _this.positions = positions !== null && positions !== void 0 ? positions : (_nodeLocations2 = nodeLocations) === null || _nodeLocations2 === void 0 ? void 0 : _nodeLocations2.map(function (loc) {\n      return loc.start;\n    });\n    _this.locations = positions && source ? positions.map(function (pos) {\n      return getLocation(source, pos);\n    }) : (_nodeLocations3 = nodeLocations) === null || _nodeLocations3 === void 0 ? void 0 : _nodeLocations3.map(function (loc) {\n      return getLocation(loc.source, loc.start);\n    });\n    _this.path = path !== null && path !== void 0 ? path : undefined;\n    var originalExtensions = originalError === null || originalError === void 0 ? void 0 : originalError.extensions;\n\n    if (extensions == null && isObjectLike(originalExtensions)) {\n      _this.extensions = _objectSpread({}, originalExtensions);\n    } else {\n      _this.extensions = extensions !== null && extensions !== void 0 ? extensions : {};\n    } // By being enumerable, JSON.stringify will include bellow properties in the resulting output.\n    // This ensures that the simplest possible GraphQL service adheres to the spec.\n\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      message: {\n        enumerable: true\n      },\n      locations: {\n        enumerable: _this.locations != null\n      },\n      path: {\n        enumerable: _this.path != null\n      },\n      extensions: {\n        enumerable: _this.extensions != null && Object.keys(_this.extensions).length > 0\n      },\n      name: {\n        enumerable: false\n      },\n      nodes: {\n        enumerable: false\n      },\n      source: {\n        enumerable: false\n      },\n      positions: {\n        enumerable: false\n      },\n      originalError: {\n        enumerable: false\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i4 = 0, _error$nodes2 = error.nodes; _i4 < _error$nodes2.length; _i4++) {\n      var node = _error$nodes2[_i4];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i6 = 0, _error$locations2 = error.locations; _i6 < _error$locations2.length; _i6++) {\n      var location = _error$locations2[_i6];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = prev.end;\n\n  while (pos < bodyLength) {\n    var code = body.charCodeAt(pos);\n    var _line = lexer.line;\n\n    var _col = 1 + pos - lexer.lineStart; // SourceCharacter\n\n\n    switch (code) {\n      case 0xfeff: // <BOM>\n\n      case 9: //   \\t\n\n      case 32: //  <space>\n\n      case 44:\n        //  ,\n        ++pos;\n        continue;\n\n      case 10:\n        //  \\n\n        ++pos;\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 13:\n        //  \\r\n        if (body.charCodeAt(pos + 1) === 10) {\n          pos += 2;\n        } else {\n          ++pos;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 33:\n        //  !\n        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);\n\n      case 35:\n        //  #\n        return readComment(source, pos, _line, _col, prev);\n\n      case 36:\n        //  $\n        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);\n\n      case 38:\n        //  &\n        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);\n\n      case 40:\n        //  (\n        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);\n\n      case 41:\n        //  )\n        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);\n\n      case 46:\n        //  .\n        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);\n        }\n\n        break;\n\n      case 58:\n        //  :\n        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);\n\n      case 61:\n        //  =\n        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);\n\n      case 64:\n        //  @\n        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);\n\n      case 91:\n        //  [\n        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);\n\n      case 93:\n        //  ]\n        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);\n\n      case 123:\n        // {\n        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);\n\n      case 124:\n        // |\n        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);\n\n      case 125:\n        // }\n        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);\n\n      case 34:\n        //  \"\n        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n          return readBlockString(source, pos, _line, _col, prev, lexer);\n        }\n\n        return readString(source, pos, _line, _col, prev);\n\n      case 45: //  -\n\n      case 48: //  0\n\n      case 49: //  1\n\n      case 50: //  2\n\n      case 51: //  3\n\n      case 52: //  4\n\n      case 53: //  5\n\n      case 54: //  6\n\n      case 55: //  7\n\n      case 56: //  8\n\n      case 57:\n        //  9\n        return readNumber(source, pos, code, _line, _col, prev);\n\n      case 65: //  A\n\n      case 66: //  B\n\n      case 67: //  C\n\n      case 68: //  D\n\n      case 69: //  E\n\n      case 70: //  F\n\n      case 71: //  G\n\n      case 72: //  H\n\n      case 73: //  I\n\n      case 74: //  J\n\n      case 75: //  K\n\n      case 76: //  L\n\n      case 77: //  M\n\n      case 78: //  N\n\n      case 79: //  O\n\n      case 80: //  P\n\n      case 81: //  Q\n\n      case 82: //  R\n\n      case 83: //  S\n\n      case 84: //  T\n\n      case 85: //  U\n\n      case 86: //  V\n\n      case 87: //  W\n\n      case 88: //  X\n\n      case 89: //  Y\n\n      case 90: //  Z\n\n      case 95: //  _\n\n      case 97: //  a\n\n      case 98: //  b\n\n      case 99: //  c\n\n      case 100: // d\n\n      case 101: // e\n\n      case 102: // f\n\n      case 103: // g\n\n      case 104: // h\n\n      case 105: // i\n\n      case 106: // j\n\n      case 107: // k\n\n      case 108: // l\n\n      case 109: // m\n\n      case 110: // n\n\n      case 111: // o\n\n      case 112: // p\n\n      case 113: // q\n\n      case 114: // r\n\n      case 115: // s\n\n      case 116: // t\n\n      case 117: // u\n\n      case 118: // v\n\n      case 119: // w\n\n      case 120: // x\n\n      case 121: // y\n\n      case 122:\n        // z\n        return readName(source, pos, _line, _col, prev);\n    }\n\n    throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n  }\n\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Source, isSource } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var _this$_options2;\n\n    if (!this.expectOptionalKeyword('implements')) {\n      return [];\n    }\n\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {\n      var types = []; // Optional leading ampersand\n\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || this.peek(TokenKind.NAME));\n\n      return types;\n    }\n\n    return this.delimitedMany(TokenKind.AMP, this.parseNamedType);\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n  ;\n\n  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","getLocation","source","position","match","lineRegexp","line","column","exec","body","index","length","printLocation","location","printSourceLocation","start","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","name","lines","split","locationLine","subLineIndex","Math","floor","subLineColumnNum","subLines","i","push","slice","printPrefixedLines","map","subLine","existingLines","filter","_ref","undefined","padLen","max","apply","_ref2","_ref3","str","prefix","join","len","Array","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_defineProperty","key","value","defineProperty","configurable","writable","_defineProperties","target","props","descriptor","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Map","fn","Function","toString","indexOf","TypeError","has","get","set","Wrapper","_construct","arguments","_getPrototypeOf","this","create","_setPrototypeOf","Parent","args","_isNativeReflectConstruct","Reflect","construct","a","instance","bind","sham","Proxy","Date","e","o","p","setPrototypeOf","__proto__","getPrototypeOf","GraphQLError","_Error","subClass","superClass","_inherits","Derived","hasNativeReflectConstruct","Constructor","protoProps","_super","result","Super","NewTarget","message","nodes","positions","path","originalError","extensions","_nodeLocations","_nodeLocations2","_nodeLocations3","_this","_classCallCheck","undefinedIfEmpty","isArray","nodeLocations","_i2","_this$nodes","loc","locations","pos","originalExtensions","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","stack","Error","captureStackTrace","error","output","_i4","_error$nodes2","node","_i6","_error$locations2","printError","array","syntaxError","description","freeze","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","NAME","INT","FLOAT","STRING","BLOCK_STRING","COMMENT","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","VARIABLE_DEFINITION","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","Lexer","startOfFileToken","lastToken","token","lineStart","_proto","advance","lookahead","kind","_token$next","next","readToken","printCharCode","code","isNaN","JSON","stringify","String","fromCharCode","toUpperCase","lexer","prev","bodyLength","end","charCodeAt","_line","_col","readComment","readBlockString","readString","readNumber","readName","unexpectedCharacterMessage","col","firstCode","isFloat","readDigits","isNameStart","b","c","d","chunkStart","charCode","char2hex","invalidSequence","rawValue","parse","options","Parser","parseDocument","parseType","parser","expectToken","type","parseTypeReference","sourceObj","_lexer","_options","parseName","DOCUMENT","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","OPERATION_DEFINITION","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","parseValueLiteral","VARIABLE","SELECTION_SET","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","ARGUMENT","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","BOOLEAN","NULL","block","LIST","values","any","_this2","fields","parseObjectField","OBJECT_FIELD","parseDirective","DIRECTIVE","LIST_TYPE","NON_NULL_TYPE","NAMED_TYPE","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","interfaces","parseImplementsInterfaces","parseFieldsDefinition","OBJECT_TYPE_DEFINITION","_this$_options2","allowLegacySDLImplementsInterfaces","types","delimitedMany","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","parseUnionMemberTypes","UNION_TYPE_DEFINITION","parseEnumValuesDefinition","ENUM_TYPE_DEFINITION","parseEnumValueDefinition","ENUM_VALUE_DEFINITION","parseInputFieldsDefinition","INPUT_OBJECT_TYPE_DEFINITION","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","repeatable","parseDirectiveLocations","DIRECTIVE_DEFINITION","parseDirectiveLocation","startToken","_this$_options4","noLocation","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","delimiterKind","isPunctuatorTokenKind"],"sourceRoot":""}